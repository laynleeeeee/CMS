package eulap.eb.domain.hibernate;
// Generated 03 3, 17 9:06:26 AM by Hibernate Tools 4.3.1


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import com.google.gson.annotations.Expose;

import eulap.common.domain.BaseDomain;

/**
 * EmployeeDtr generated by hbm2java
 */
@Entity
@Table(name = "EMPLOYEE_DTR")
public class EmployeeDtr extends BaseDomain  implements java.io.Serializable {
	private static final long serialVersionUID = -7446596688563019267L;
	@Expose
	private Integer employeeId;
	@Expose
	private Integer locationId;
	@Expose
	private Employee employee;
	@Expose
	private Date logTime;
	@Expose
	private Boolean isSynchronize;
	@Expose
	private Boolean active;
	private Integer payrollEmployeeTimesheetId;

	public EmployeeDtr() {
	}

	public EmployeeDtr(Employee employee, Date logTime) {
		this.employee = employee;
		this.logTime = logTime;
	}

	public EmployeeDtr(Employee employee, Date logTime, Boolean isSynchronize) {
		this.employee = employee;
		this.logTime = logTime;
		this.isSynchronize = isSynchronize;
	}

	public enum FIELD {
		id, employeeId, logTime, active, payrollEmployeeTimesheetId
	}

	@Id
	@Override
	@GeneratedValue(generator = "increment")
	@GenericGenerator (name = "increment", strategy = "increment")
	@Column(name="EMPLOYEE_DTR_ID", columnDefinition = "INT(10)", unique = true, nullable = false, insertable = false, updatable = false)
	public int getId() {
		return super.getId();
	}

	@Column(name = "EMPLOYEE_ID", columnDefinition = "INT(10)")
	public Integer getEmployeeId() {
		return employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@Transient
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Column(name = "LOG_TIME", columnDefinition = "timestamp")
	public Date getLogTime() {
		return this.logTime;
	}

	public void setLogTime(Date logTime) {
		this.logTime = logTime;
	}

	@Column(name = "IS_SYNCHRONIZE", columnDefinition = "tinyint(1)")
	public Boolean getIsSynchronize() {
		return this.isSynchronize;
	}

	public void setIsSynchronize(Boolean isSynchronize) {
		this.isSynchronize = isSynchronize;
	}

	@Column(name = "PAYROLL_EMPLOYEE_TIMESHEET_ID", columnDefinition = "INT(10)")
	public Integer getPayrollEmployeeTimesheetId() {
		return payrollEmployeeTimesheetId;
	}

	public void setPayrollEmployeeTimesheetId(Integer payrollEmployeeTimesheetId) {
		this.payrollEmployeeTimesheetId = payrollEmployeeTimesheetId;
	}

	@Override
	public String toString() {
		return "EmployeeDtr [employeeId=" + employeeId + ", locationId=" + locationId + ", employee=" + employee
				+ ", logTime=" + logTime + ", isSynchronize=" + isSynchronize + ", active=" + active
				+ ", payrollEmployeeTimesheetId=" + payrollEmployeeTimesheetId + "]";
	}

	@Column(name = "LOCATION_ID", columnDefinition = "INT(10)")
	public Integer getLocationId() {
		return locationId;
	}

	public void setLocationId(Integer locationId) {
		this.locationId = locationId;
	}

	@Column(name="ACTIVE", columnDefinition="TINYINT(1)")
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

}
