-- Description: Stored procedure for getting the summry list of importations



Delimiter //
DROP PROCEDURE IF EXISTS GET_SUMMARY_LIST_OF_IMPORTATIONS;//
CREATE PROCEDURE GET_SUMMARY_LIST_OF_IMPORTATIONS (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_YEAR INT, IN IN_MONTH INT)
BEGIN

SELECT LAST_DAY(API.GL_DATE) AS DATE, IID.IMPORT_ENTRY_NO, IID.ASSESSMENT_RELEASE_DATE, IID.REGISTERED_NAME, IID.IMPORTATION_DATE, IID.COUNTRY_OF_ORIGIN,
SUM(IID.TOTAL_LANDED_COST) AS TOTAL_LANDED_COST, SUM(IID.DUTIABLE_VALUE) AS DUTIABLE_VALUE, SUM(IID.CHARGES_FROM_CUSTOM) AS CHARGES_FROM_CUSTOM, 
SUM(IID.TAXABLE_IMPORT) AS TAXABLE_IMPORT, SUM(IID.EXEMPT_IMPORT) AS EXEMPT_IMPORT, SUM(APL.VAT_AMOUNT) AS VAT_AMOUNT,
IID.OR_NUMBER, IID.PAYMENT_DATE
FROM AP_INVOICE API
INNER JOIN INVOICE_IMPORTATION_DETAILS IID ON IID.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = API.SUPPLIER_ID
INNER JOIN AP_LINE APL ON APL.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = API.FORM_WORKFLOW_ID
WHERE API.INVOICE_TYPE_ID IN (43,44,45,46,47,48)
AND FW.IS_COMPLETE = 1
AND API.COMPANY_ID=IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, API.DIVISION_ID = IN_DIVISION_ID, API.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(API.GL_DATE) = IN_YEAR
AND MONTH(API.GL_DATE) = IN_MONTH
GROUP BY IID.REGISTERED_NAME
ORDER BY API.GL_DATE;

END;//