-- Description: Stored procedure for getting the summry list of sales




Delimiter //
DROP PROCEDURE IF EXISTS GET_SUMMARY_LIST_OF_SALES;//
CREATE PROCEDURE GET_SUMMARY_LIST_OF_SALES (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_YEAR INT, IN IN_MONTH INT)
BEGIN

SELECT LAST_DAY(DATE) AS MONTH_END, TIN, BUSINESS_CLASSIFICATION_ID, TRADE_NAME, FIRST_NAME, MIDDLE_NAME, LAST_NAME, SUM(GROSS_SALES) - SUM(OUTPUT_VAT) AS GROSS_SALES, SUM(EXEMPT_SALES) AS EXEMPT_SALES,
SUM(ZERO_RATED_SALES) AS ZERO_RATED_SALES, SUM(TAXABLE_SALES) AS TAXABLE_SALES, SUM(OUTPUT_VAT) AS OUTPUT_VAT, SUM(GROSS_TAXABLE_SALE) AS GROSS_TAXABLE_SALE, STREET_BRGY, CITY_PROVINCE FROM (
	-- AR INVOICE FOR SERVICE LINE, GOODS BOTH SERIAL AND NON SERIALIZE
	SELECT ID, DATE, BUSINESS_CLASSIFICATION_ID, TIN, NAME AS TRADE_NAME, FIRST_NAME, MIDDLE_NAME, LAST_NAME,
		GROSS_SALES, (EXEMPT_SALES_ITEM_NS + EXEMPT_SALES_SERVICE + EXEMPT_SALES_ITEM_S) AS EXEMPT_SALES,
		(ZERO_RATED_SALES_ITEM_NS + ZERO_RATED_SALES_SERVICE + ZERO_RATED_SALES_ITEM_S) AS ZERO_RATED_SALES,
		(TAXABLE_SALES_ITEM_NS + TAXABLE_SALES_SERVICE + TAXABLE_SALES_ITEM_S)AS TAXABLE_SALES,
		(OUTPUT_VAT_ITEM_NS + OUTPUT_VAT_SERVICE + OUTPUT_VAT_ITEM_S) AS OUTPUT_VAT,
		(GROSS_TAXABLE_SALE_ITEM_NS + GROSS_TAXABLE_SALE_SERVICE + GROSS_TAXABLE_SALE_ITEM_S) AS GROSS_TAXABLE_SALE,
		AR_CUSTOMER_ID, STREET_BRGY, CITY_PROVINCE FROM (
			SELECT AR.AR_INVOICE_ID AS ID, AR.DATE_RECEIVED AS DATE, AC.BUSINESS_CLASSIFICATION_ID, AC.TIN, AC.NAME, AC.FIRST_NAME, AC.MIDDLE_NAME, AC.LAST_NAME,
			AR.AMOUNT + COALESCE(AR.WT_AMOUNT, 0) + COALESCE(AR.WT_VAT_AMOUNT, 0) + COALESCE(AR.RECOUPMENT, 0) + COALESCE(AR.RETENTION, 0) AS GROSS_SALES,
			COALESCE((SELECT SUM(ARI.AMOUNT) FROM AR_INVOICE_ITEM ARI WHERE ARI.TAX_TYPE_ID = 2 AND ARI.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS EXEMPT_SALES_ITEM_NS,
			COALESCE((SELECT SUM(ARL.AMOUNT) FROM AR_INVOICE_LINE ARL WHERE ARL.TAX_TYPE_ID = 2 AND ARL.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS EXEMPT_SALES_SERVICE,
			COALESCE((SELECT SUM(SI.AMOUNT) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
				WHERE OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1 AND SI.TAX_TYPE_ID = 2 AND OTO.FROM_OBJECT_ID = AR.EB_OBJECT_ID), 0) AS EXEMPT_SALES_ITEM_S,
			COALESCE((SELECT SUM(ARI.AMOUNT) FROM AR_INVOICE_ITEM ARI WHERE ARI.TAX_TYPE_ID = 3 AND ARI.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS ZERO_RATED_SALES_ITEM_NS,
			COALESCE((SELECT SUM(ARL.AMOUNT) FROM AR_INVOICE_LINE ARL WHERE ARL.TAX_TYPE_ID = 3 AND ARL.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS ZERO_RATED_SALES_SERVICE,
			COALESCE((SELECT SUM(SI.AMOUNT) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
				WHERE OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1 AND SI.TAX_TYPE_ID = 3 AND OTO.FROM_OBJECT_ID = AR.EB_OBJECT_ID), 0) AS ZERO_RATED_SALES_ITEM_S,
			COALESCE((SELECT SUM(ARI.AMOUNT) FROM AR_INVOICE_ITEM ARI WHERE ARI.TAX_TYPE_ID IN (8, 9) AND ARI.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS TAXABLE_SALES_ITEM_NS,
			COALESCE((SELECT SUM(ARL.AMOUNT) FROM AR_INVOICE_LINE ARL WHERE ARL.TAX_TYPE_ID IN (8, 9) AND ARL.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS TAXABLE_SALES_SERVICE,
			COALESCE((SELECT SUM(SI.AMOUNT) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
				WHERE OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1 AND SI.TAX_TYPE_ID IN (8, 9) AND OTO.FROM_OBJECT_ID = AR.EB_OBJECT_ID), 0) AS TAXABLE_SALES_ITEM_S, 
			COALESCE((SELECT SUM(ARI.VAT_AMOUNT) FROM AR_INVOICE_ITEM ARI WHERE ARI.TAX_TYPE_ID IN (8, 9) AND ARI.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS OUTPUT_VAT_ITEM_NS,
			COALESCE((SELECT SUM(ARL.VAT_AMOUNT) FROM AR_INVOICE_LINE ARL WHERE ARL.TAX_TYPE_ID IN (8, 9) AND ARL.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS OUTPUT_VAT_SERVICE,
			COALESCE((SELECT SUM(SI.VAT_AMOUNT) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
				WHERE OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1 AND SI.TAX_TYPE_ID IN (8, 9) AND OTO.FROM_OBJECT_ID = AR.EB_OBJECT_ID), 0) AS OUTPUT_VAT_ITEM_S,
			COALESCE((SELECT SUM(ARI.VAT_AMOUNT + ARI.AMOUNT) FROM AR_INVOICE_ITEM ARI WHERE ARI.TAX_TYPE_ID IN (8, 9) AND ARI.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS GROSS_TAXABLE_SALE_ITEM_NS,
			COALESCE((SELECT SUM(ARL.VAT_AMOUNT + ARL.AMOUNT) FROM AR_INVOICE_LINE ARL WHERE ARL.TAX_TYPE_ID IN (8, 9) AND ARL.AR_INVOICE_ID = AR.AR_INVOICE_ID), 0) AS GROSS_TAXABLE_SALE_SERVICE,
			COALESCE((SELECT SUM(SI.VAT_AMOUNT + SI.AMOUNT) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
				WHERE OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1 AND SI.TAX_TYPE_ID IN (8, 9) AND OTO.FROM_OBJECT_ID = AR.EB_OBJECT_ID), 0) AS GROSS_TAXABLE_SALE_ITEM_S,
			AR.AR_CUSTOMER_ID, AC.STREET_BRGY, AC.CITY_PROVINCE
			FROM AR_INVOICE AR
			INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = AR.AR_CUSTOMER_ID
			INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = AR.FORM_WORKFLOW_ID
			WHERE FW.IS_COMPLETE = 1
			AND AR.COMPANY_ID = IN_COMPANY_ID
			AND IF(IN_DIVISION_ID != -1, AR.DIVISION_ID = IN_DIVISION_ID, AR.DIVISION_ID != IN_DIVISION_ID)
			AND YEAR(AR.DATE_RECEIVED) = IN_YEAR
			AND MONTH(AR.DATE_RECEIVED) = IN_MONTH
			AND AR.AR_INVOICE_ID IN (SELECT AR_INVOICE_ID FROM (
				SELECT ARII.AR_INVOICE_ID FROM AR_INVOICE_ITEM ARII 
				INNER JOIN AR_INVOICE ARI ON ARI.AR_INVOICE_ID = ARII.AR_INVOICE_ID
				INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
				WHERE FW.IS_COMPLETE = 1
				AND ARII.TAX_TYPE_ID IN (2, 3, 8, 9)
				UNION ALL
				SELECT ARIL.AR_INVOICE_ID FROM AR_INVOICE_LINE ARIL 
				INNER JOIN AR_INVOICE ARI ON ARI.AR_INVOICE_ID = ARIL.AR_INVOICE_ID
				INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
				WHERE FW.IS_COMPLETE = 1
				AND ARIL.TAX_TYPE_ID IN (2, 3, 8, 9)
				UNION ALL
				SELECT ARI.AR_INVOICE_ID FROM SERIAL_ITEM SI
				INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID 
				INNER JOIN AR_INVOICE ARI ON ARI.EB_OBJECT_ID = OTO.FROM_OBJECT_ID
				INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
				WHERE FW.IS_COMPLETE = 1
				AND OTO.OR_TYPE_ID = 12006
				AND SI.ACTIVE = 1
				AND SI.TAX_TYPE_ID IN (2, 3, 8, 9)) AS INNER_TBL
				GROUP BY AR_INVOICE_ID)
		) AS ARI_SOURCE_TBL
	UNION ALL
	SELECT ART.AR_TRANSACTION_ID AS ID, ART.GL_DATE AS DATE, AC.BUSINESS_CLASSIFICATION_ID, AC.TIN, AC.NAME, AC.FIRST_NAME, AC.MIDDLE_NAME, AC.LAST_NAME,
	ART.AMOUNT + COALESCE(ART.WT_AMOUNT, 0) + COALESCE(ART.WT_VAT_AMOUNT, 0) AS GROSS_SALES,
	COALESCE((SELECT SUM(ARS.AMOUNT) FROM AR_SERVICE_LINE ARS WHERE ARS.TAX_TYPE_ID = 2 AND ARS.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID), 0) AS EXEMPT_SALES,
	COALESCE((SELECT SUM(ARS.AMOUNT) FROM AR_SERVICE_LINE ARS WHERE ARS.TAX_TYPE_ID = 3 AND ARS.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID), 0) AS ZERO_RATED,
	COALESCE((SELECT SUM(ARS.AMOUNT) FROM AR_SERVICE_LINE ARS WHERE ARS.TAX_TYPE_ID IN (8, 9) AND ARS.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID), 0) AS TAXABLE_SALES,
	COALESCE((SELECT SUM(ARS.VAT_AMOUNT) FROM AR_SERVICE_LINE ARS WHERE ARS.TAX_TYPE_ID IN (8, 9) AND ARS.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID), 0) AS OUTPUT_VAT,
	COALESCE((SELECT SUM(ARS.VAT_AMOUNT + ARS.AMOUNT) FROM AR_SERVICE_LINE ARS WHERE ARS.TAX_TYPE_ID IN (8, 9) AND ARS.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID), 0) AS GROSS_TAXABLE_SALE,
	AC.AR_CUSTOMER_ID, AC.STREET_BRGY, AC.CITY_PROVINCE
	FROM AR_TRANSACTION ART
	INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ART.FORM_WORKFLOW_ID
	INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = ART.CUSTOMER_ID
	WHERE FW.IS_COMPLETE = 1
	AND ART.COMPANY_ID = IN_COMPANY_ID
	AND IF(IN_DIVISION_ID != -1, ART.DIVISION_ID = IN_DIVISION_ID, ART.DIVISION_ID != IN_DIVISION_ID)
	AND YEAR(ART.GL_DATE) = IN_YEAR
	AND MONTH(ART.GL_DATE) = IN_MONTH
	AND ART.AR_TRANSACTION_ID IN (SELECT ARSL.AR_TRANSACTION_ID FROM AR_SERVICE_LINE ARSL 
		INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ARSL.AR_TRANSACTION_ID
		INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ART.FORM_WORKFLOW_ID
		WHERE FW.IS_COMPLETE = 1 AND ARSL.TAX_TYPE_ID IN (2, 3, 8, 9))
	UNION ALL
	SELECT ARM.AR_MISCELLANEOUS_ID AS ID, ARM.MATURITY_DATE AS DATE, AC.BUSINESS_CLASSIFICATION_ID, AC.TIN, AC.NAME, AC.FIRST_NAME, AC.MIDDLE_NAME, AC.LAST_NAME,
	(ARM.AMOUNT + COALESCE(ARM.WT_AMOUNT, 0) + COALESCE(ARM.WT_VAT_AMOUNT, 0)) AS GROSS_SALES,
	COALESCE((SELECT SUM(ARML.AMOUNT) FROM AR_MISCELLANEOUS_LINE ARML WHERE ARML.TAX_TYPE_ID = 2 AND ARML.AR_MISCELLANEOUS_ID = ARM.AR_MISCELLANEOUS_ID), 0) AS EXEMPT_SALES,
	COALESCE((SELECT SUM(ARML.AMOUNT) FROM AR_MISCELLANEOUS_LINE ARML WHERE ARML.TAX_TYPE_ID = 3 AND ARML.AR_MISCELLANEOUS_ID = ARM.AR_MISCELLANEOUS_ID), 0) AS ZERO_RATED,
	COALESCE((SELECT SUM(ARML.AMOUNT) FROM AR_MISCELLANEOUS_LINE ARML WHERE ARML.TAX_TYPE_ID IN (8, 9) AND ARML.AR_MISCELLANEOUS_ID = ARM.AR_MISCELLANEOUS_ID), 0) AS TAXABLE_SALES,
	COALESCE((SELECT SUM(ARML.VAT_AMOUNT) FROM AR_MISCELLANEOUS_LINE ARML WHERE ARML.TAX_TYPE_ID IN (8, 9) AND ARML.AR_MISCELLANEOUS_ID = ARM.AR_MISCELLANEOUS_ID), 0) AS OUTPUT_VAT,
	COALESCE((SELECT SUM(ARML.VAT_AMOUNT + ARML.AMOUNT) FROM AR_MISCELLANEOUS_LINE ARML WHERE ARML.TAX_TYPE_ID IN (8, 9) AND ARML.AR_MISCELLANEOUS_ID = ARM.AR_MISCELLANEOUS_ID), 0) AS GROSS_TAXABLE_SALE,
	ARM.AR_CUSTOMER_ID, AC.STREET_BRGY, AC.CITY_PROVINCE
	FROM AR_MISCELLANEOUS ARM
	INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ARM.FORM_WORKFLOW_ID
	INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = ARM.AR_CUSTOMER_ID
	WHERE FW.IS_COMPLETE = 1
	AND ARM.COMPANY_ID = IN_COMPANY_ID
	AND IF(IN_DIVISION_ID != -1, ARM.DIVISION_ID = IN_DIVISION_ID, ARM.DIVISION_ID != IN_DIVISION_ID)
	AND YEAR(ARM.MATURITY_DATE) = IN_YEAR
	AND MONTH(ARM.MATURITY_DATE) = IN_MONTH
	AND ARM.AR_MISCELLANEOUS_ID IN (SELECT ARML.AR_MISCELLANEOUS_ID FROM AR_MISCELLANEOUS_LINE ARML 
		INNER JOIN AR_MISCELLANEOUS ARM ON ARM.AR_MISCELLANEOUS_ID = ARML.AR_MISCELLANEOUS_ID
		INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ARM.FORM_WORKFLOW_ID
		WHERE FW.IS_COMPLETE = 1 AND ARML.TAX_TYPE_ID IN (2, 3, 8, 9))
) AS SLS WHERE EXEMPT_SALES != 0 
OR ZERO_RATED_SALES != 0 
OR TAXABLE_SALES != 0 
OR OUTPUT_VAT != 0
OR GROSS_TAXABLE_SALE != 0
GROUP BY AR_CUSTOMER_ID
HAVING GROSS_SALES NOT BETWEEN -0.009 AND 0.009
ORDER BY DATE;

END;//
