
-- Description	: Stored procedure for retrieval of loan account history report data

Delimiter //
DROP PROCEDURE IF EXISTS GET_LOAN_ACCOUNT_HISTORY;
CREATE PROCEDURE GET_LOAN_ACCOUNT_HISTORY(IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_SUPPLIER_ID INT, IN IN_SUPPLIER_ACCOUNT_ID INT,
IN IN_DATE_FROM DATE, IN IN_DATE_TO DATE)

BEGIN

SELECT DIVISION, DATE, REF_NO, CHECK_NO, DESCRIPTION, LOAN_AMOUNT, PRINCIPAL_AMOUNT, INTEREST_AMOUNT, TOTAL_PAYMENT FROM (

SELECT '' AS DIVISION, NULL AS DATE, '' AS REF_NO, '' AS CHECK_NO, 'BEGINNING BALANCE' AS DESCRIPTION,
SUM(LOAN_AMOUNT) AS LOAN_AMOUNT, SUM(PRINCIPAL_AMOUNT) AS PRINCIPAL_AMOUNT, SUM(INTEREST_AMOUNT) AS INTEREST_AMOUNT,
SUM(TOTAL_PAYMENT) AS TOTAL_PAYMENT FROM (

SELECT LP.AMOUNT AS LOAN_AMOUNT, 0 AS PRINCIPAL_AMOUNT, 0 AS INTEREST_AMOUNT, 0 AS TOTAL_PAYMENT
FROM LOAN_PROCEEDS LP
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = LP.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND LP.COMPANY_ID = IN_COMPANY_ID
AND LP.DIVISION_ID = IN_DIVISION_ID
AND LP.SUPPLIER_ID = IN_SUPPLIER_ID
AND LP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID
AND LP.DATE < IN_DATE_FROM

UNION ALL

SELECT 0 AS LOAN_AMOUNT, COALESCE(API.PRINCIPAL_PAYMENT, 0) AS PRINCIPAL_AMOUNT,
COALESCE((SELECT SUM(APL.GROSS_AMOUNT) FROM AP_LINE APL
WHERE APL.AP_INVOICE_ID = API.AP_INVOICE_ID
AND APL.LOAN_CHARGE_TYPE_ID = 1), 0) AS INTEREST_AMOUNT,
APPL.PAID_AMOUNT AS TOTAL_PAYMENT
FROM AP_PAYMENT_LINE APPL
INNER JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = APP.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
INNER JOIN OBJECT_TO_OBJECT OTO1 ON OTO1.TO_OBJECT_ID = APPL.EB_OBJECT_ID
INNER JOIN AP_INVOICE API ON API.EB_OBJECT_ID = OTO1.FROM_OBJECT_ID
INNER JOIN OBJECT_TO_OBJECT OTO2 ON OTO2.TO_OBJECT_ID = API.EB_OBJECT_ID
INNER JOIN LOAN_PROCEEDS LP ON LP.EB_OBJECT_ID = OTO2.FROM_OBJECT_ID
WHERE FW.IS_COMPLETE = 1
AND OTO1.OR_TYPE_ID = 24004
AND OTO2.OR_TYPE_ID = 24009
AND API.INVOICE_TYPE_ID IN (49, 50, 51, 52, 53, 54)
AND APP.COMPANY_ID = IN_COMPANY_ID
AND APP.DIVISION_ID = IN_DIVISION_ID
AND APP.SUPPLIER_ID = IN_SUPPLIER_ID
AND APP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID
AND APP.PAYMENT_DATE < IN_DATE_FROM

) AS BEGINNING_BALANCE

UNION ALL

SELECT D.NAME AS DIVISION, LP.DATE, CONCAT('LP-', LP.SEQUENCE_NO) AS REF_NO, '' AS CHECK_NO, LP.DESCRIPTION,
LP.AMOUNT AS LOAN_AMOUNT, 0 AS PRINCIPAL_AMOUNT, 0 AS INTEREST_AMOUNT, 0 AS TOTAL_PAYMENT
FROM LOAN_PROCEEDS LP
INNER JOIN DIVISION D ON D.DIVISION_ID = LP.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = LP.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND LP.COMPANY_ID = IN_COMPANY_ID
AND LP.DIVISION_ID = IN_DIVISION_ID
AND LP.SUPPLIER_ID = IN_SUPPLIER_ID
AND LP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID
AND LP.DATE BETWEEN IN_DATE_FROM AND IN_DATE_TO

UNION ALL

SELECT D.NAME AS DIVISION, APP.DATE_CLEARED, CONCAT('APP-', APP.VOUCHER_NO) AS REF_NO,
APP.CHECK_NUMBER AS CHECK_NO, CONCAT('LP-', LP.SEQUENCE_NO, ', ', 'APL-', API.SEQUENCE_NO) AS DESCRIPTION,
0 AS LOAN_AMOUNT, COALESCE(API.PRINCIPAL_PAYMENT, 0) AS PRINCIPAL_AMOUNT,
COALESCE((SELECT SUM(APL.GROSS_AMOUNT) FROM AP_LINE APL WHERE APL.AP_INVOICE_ID = API.AP_INVOICE_ID
AND APL.LOAN_CHARGE_TYPE_ID = 1), 0) AS INTEREST_AMOUNT,
-- TOTAL PAYMENT SHOULD INCLUDE WT AMOUNT
APPL.PAID_AMOUNT + API.WT_AMOUNT AS TOTAL_PAYMENT
FROM AP_PAYMENT_LINE APPL
INNER JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = APP.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
INNER JOIN OBJECT_TO_OBJECT OTO1 ON OTO1.TO_OBJECT_ID = APPL.EB_OBJECT_ID
INNER JOIN AP_INVOICE API ON API.EB_OBJECT_ID = OTO1.FROM_OBJECT_ID
INNER JOIN OBJECT_TO_OBJECT OTO2 ON OTO2.TO_OBJECT_ID = API.EB_OBJECT_ID
INNER JOIN LOAN_PROCEEDS LP ON LP.EB_OBJECT_ID = OTO2.FROM_OBJECT_ID
WHERE FW.IS_COMPLETE = 1
AND OTO1.OR_TYPE_ID = 24004
AND OTO2.OR_TYPE_ID = 24009
AND API.INVOICE_TYPE_ID IN (49, 50, 51, 52, 53, 54)
AND APP.COMPANY_ID = IN_COMPANY_ID
AND APP.DIVISION_ID = IN_DIVISION_ID
AND APP.SUPPLIER_ID = IN_SUPPLIER_ID
AND APP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID
AND APP.DATE_CLEARED BETWEEN IN_DATE_FROM AND IN_DATE_TO

) AS LOAN_ACCOUNT_TBL;
END //