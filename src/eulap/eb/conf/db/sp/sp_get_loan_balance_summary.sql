
-- Description	: Stored procedure for retrieval of loan balances summary report data

Delimiter //
DROP PROCEDURE IF EXISTS GET_LOAN_BALANCE_SUMMARY;
CREATE PROCEDURE GET_LOAN_BALANCE_SUMMARY(IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_BALANCE_OPTION INT, IN IN_AS_OF_DATE DATE)

BEGIN

SELECT SUPPLIER, DATE, REF_NO, DESCRIPTION, TOTAL_LOAN_AMOUNT, TOTAL_PRINCIPAL_PAID, TOTAL_INTEREST, TOTAL_PAID_AMOUNT, OUTSTANDING_BALANCE FROM (

SELECT LOAN_PROCEEDS_ID, SUPPLIER, DATE, DESCRIPTION, GROUP_CONCAT(DISTINCT REF_NO SEPARATOR ', ') AS REF_NO, SUM(LOAN_AMOUNT) AS TOTAL_LOAN_AMOUNT, SUM(PRINCIPAL_AMOUNT) AS TOTAL_PRINCIPAL_PAID,
SUM(INTEREST_AMOUNT) AS TOTAL_INTEREST, SUM(TOTAL_PAYMENT) AS TOTAL_PAID_AMOUNT, ROUND(SUM(LOAN_AMOUNT) - SUM(PRINCIPAL_AMOUNT), 2) AS OUTSTANDING_BALANCE FROM (

SELECT LP.LOAN_PROCEEDS_ID, S.NAME AS SUPPLIER, LP.DATE, CONCAT('LP-', LP.SEQUENCE_NO) AS REF_NO, LP.DESCRIPTION,
LP.AMOUNT AS LOAN_AMOUNT, 0 AS PRINCIPAL_AMOUNT, 0 AS INTEREST_AMOUNT, 0 AS TOTAL_PAYMENT, S.SUPPLIER_ID
FROM LOAN_PROCEEDS LP
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = LP.SUPPLIER_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = LP.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = LP.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND LP.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, LP.DIVISION_ID = IN_DIVISION_ID, LP.DIVISION_ID != IN_DIVISION_ID)
AND LP.DATE <= IN_AS_OF_DATE

UNION ALL

SELECT LP.LOAN_PROCEEDS_ID, S.NAME AS SUPPLIER, LP.DATE, CONCAT('LP-', LP.SEQUENCE_NO) AS REF_NO,
LP.DESCRIPTION, 0 AS LOAN_AMOUNT, COALESCE(API.PRINCIPAL_PAYMENT, 0) AS PRINCIPAL_AMOUNT,
COALESCE((SELECT SUM(APL.GROSS_AMOUNT) FROM AP_LINE APL WHERE APL.AP_INVOICE_ID = API.AP_INVOICE_ID AND APL.LOAN_CHARGE_TYPE_ID = 1), 0) AS INTEREST_AMOUNT,
APPL.PAID_AMOUNT + API.WT_AMOUNT AS TOTAL_PAYMENT, S.SUPPLIER_ID
FROM AP_PAYMENT_LINE APPL
INNER JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = APP.SUPPLIER_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = APP.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
INNER JOIN OBJECT_TO_OBJECT OTO1 ON OTO1.TO_OBJECT_ID = APPL.EB_OBJECT_ID
INNER JOIN AP_INVOICE API ON API.EB_OBJECT_ID = OTO1.FROM_OBJECT_ID
INNER JOIN OBJECT_TO_OBJECT OTO2 ON OTO2.TO_OBJECT_ID = API.EB_OBJECT_ID
INNER JOIN LOAN_PROCEEDS LP ON LP.EB_OBJECT_ID = OTO2.FROM_OBJECT_ID
WHERE FW.IS_COMPLETE = 1
AND OTO1.OR_TYPE_ID = 24004
AND OTO2.OR_TYPE_ID = 24009
AND API.INVOICE_TYPE_ID IN (49, 50, 51, 52, 53, 54)
AND APP.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, APP.DIVISION_ID = IN_DIVISION_ID, APP.DIVISION_ID != IN_DIVISION_ID)
AND APP.PAYMENT_DATE <= IN_AS_OF_DATE

) AS INNER_TBL GROUP BY SUPPLIER_ID
) AS LOAN_BALANCES_TBL
WHERE (CASE WHEN IN_BALANCE_OPTION = 1 THEN OUTSTANDING_BALANCE != 0
WHEN IN_BALANCE_OPTION = 2 THEN OUTSTANDING_BALANCE >= 0
WHEN IN_BALANCE_OPTION = 0 THEN (OUTSTANDING_BALANCE >= 0 OR OUTSTANDING_BALANCE < 0) END);

END //