-- Description: Stored procedure that will get the bank reconciliation

Delimiter //
DROP PROCEDURE IF EXISTS GET_BANK_RECON;
CREATE PROCEDURE GET_BANK_RECON(IN IN_BANK_ACCT_ID INT, IN IN_AS_OF_DATE DATE, IN IN_DIVISION_ID INT)
BEGIN
SELECT FORM_ID, DATE, CHECK_DATE, RECEIPT_NO, CHECK_NO, CUSTOMER, SUPPLIER, AMOUNT, STATUS, FIELD FROM (
	SELECT ARR.AR_RECEIPT_ID AS FORM_ID, ARR.MATURITY_DATE AS DATE, NULL AS CHECK_DATE, ARR.RECEIPT_NUMBER AS RECEIPT_NO,
	ARR.REF_NUMBER AS CHECK_NO, AC.NAME AS CUSTOMER, NULL AS SUPPLIER,
	ARR.AMOUNT, FS.DESCRIPTION AS STATUS, '1' AS FIELD FROM AR_RECEIPT ARR
		INNER JOIN AR_CUSTOMER AC ON ARR.AR_CUSTOMER_ID = AC.AR_CUSTOMER_ID
		INNER JOIN AR_CUSTOMER_ACCOUNT ACC ON ARR.AR_CUSTOMER_ACCOUNT_ID = ACC.AR_CUSTOMER_ACCOUNT_ID
		INNER JOIN RECEIPT_METHOD RM ON ARR.RECEIPT_METHOD_ID = RM.RECEIPT_METHOD_ID
		INNER JOIN BANK_ACCOUNT BA ON RM.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON ARR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN DIVISION D ON ARR.DIVISION_ID = IN_DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID NOT IN (4, 16)
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID = IN_BANK_ACCT_ID 
		AND ARR.MATURITY_DATE <= IN_AS_OF_DATE
	UNION ALL
	SELECT ARM.AR_MISCELLANEOUS_ID, ARM.MATURITY_DATE, NULL, ARM.RECEIPT_NUMBER, ARM.REF_NUMBER,
	AC.NAME, NULL, ARM.AMOUNT, FS.DESCRIPTION, '1' FROM AR_MISCELLANEOUS ARM
		INNER JOIN AR_CUSTOMER AC ON ARM.AR_CUSTOMER_ID = AC.AR_CUSTOMER_ID
		INNER JOIN AR_CUSTOMER_ACCOUNT ACC ON ARM.AR_CUSTOMER_ACCOUNT_ID = ACC.AR_CUSTOMER_ACCOUNT_ID
		INNER JOIN RECEIPT_METHOD RM ON ARM.RECEIPT_METHOD_ID = RM.RECEIPT_METHOD_ID
		INNER JOIN BANK_ACCOUNT BA ON RM.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON ARM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN DIVISION D ON ARM.DIVISION_ID = D.DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID NOT IN (4, 16)
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID=IN_BANK_ACCT_ID 
		AND ARM.MATURITY_DATE <= IN_AS_OF_DATE
	UNION ALL
	SELECT APP.AP_PAYMENT_ID, APP.PAYMENT_DATE, APP.CHECK_DATE, NULL, APP.CHECK_NUMBER, NULL, S.NAME, 
	APP.AMOUNT, FS.DESCRIPTION, '2' FROM AP_PAYMENT APP
		INNER JOIN SUPPLIER S ON APP.SUPPLIER_ID = S.SUPPLIER_ID
		INNER JOIN BANK_ACCOUNT BA ON APP.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON APP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN DIVISION D ON APP.DIVISION_ID = D.DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID NOT IN (1, 4, 16, 32)
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID = IN_BANK_ACCT_ID
		AND APP.CHECK_DATE <= IN_AS_OF_DATE
		AND APP.DATE_CLEARED IS NULL
	UNION ALL
	SELECT DISTINCT ARR.AR_RECEIPT_ID AS FORM_ID, ARR.MATURITY_DATE AS DATE, NULL AS CHECK_DATE, ARR.RECEIPT_NUMBER AS RECEIPT_NO,
		ARR.REF_NUMBER AS CHECK_NO, AC.NAME AS CUSTOMER, NULL AS SUPPLIER,
		ARR.AMOUNT, FS.DESCRIPTION AS STATUS, '1' AS FIELD FROM AR_RECEIPT ARR
		INNER JOIN AR_CUSTOMER AC ON ARR.AR_CUSTOMER_ID = AC.AR_CUSTOMER_ID
		INNER JOIN AR_CUSTOMER_ACCOUNT ACC ON ARR.AR_CUSTOMER_ACCOUNT_ID = ACC.AR_CUSTOMER_ACCOUNT_ID
		INNER JOIN RECEIPT_METHOD RM ON ARR.RECEIPT_METHOD_ID = RM.RECEIPT_METHOD_ID
		INNER JOIN BANK_ACCOUNT BA ON RM.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON ARR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN FORM_WORKFLOW_LOG FWL ON FWL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		AND FW.CURRENT_STATUS_ID = 16 AND FWL.FORM_STATUS_ID = FW.CURRENT_STATUS_ID
		INNER JOIN DIVISION D ON ARR.DIVISION_ID = IN_DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID = 16
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID = IN_BANK_ACCT_ID 
		AND FWL.CREATED_DATE > IN_AS_OF_DATE
		AND FWL.FORM_STATUS_ID = 16
	UNION ALL
	SELECT ARM.AR_MISCELLANEOUS_ID, ARM.MATURITY_DATE, NULL, ARM.RECEIPT_NUMBER, ARM.REF_NUMBER,
		AC.NAME, NULL, ARM.AMOUNT, FS.DESCRIPTION, '1' FROM AR_MISCELLANEOUS ARM
		INNER JOIN AR_CUSTOMER AC ON ARM.AR_CUSTOMER_ID = AC.AR_CUSTOMER_ID
		INNER JOIN AR_CUSTOMER_ACCOUNT ACC ON ARM.AR_CUSTOMER_ACCOUNT_ID = ACC.AR_CUSTOMER_ACCOUNT_ID
		INNER JOIN RECEIPT_METHOD RM ON ARM.RECEIPT_METHOD_ID = RM.RECEIPT_METHOD_ID
		INNER JOIN BANK_ACCOUNT BA ON RM.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON ARM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN FORM_WORKFLOW_LOG FWL ON FWL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		AND FW.CURRENT_STATUS_ID = 16 AND FWL.FORM_STATUS_ID = FW.CURRENT_STATUS_ID
		INNER JOIN DIVISION D ON ARM.DIVISION_ID = D.DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID = 16
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID=IN_BANK_ACCT_ID 
		AND ARM.MATURITY_DATE <= IN_AS_OF_DATE
		AND FWL.CREATED_DATE > IN_AS_OF_DATE
		AND FWL.FORM_STATUS_ID = 16
	UNION ALL
	SELECT DISTINCT APP.AP_PAYMENT_ID, APP.PAYMENT_DATE, APP.CHECK_DATE, NULL, APP.CHECK_NUMBER, NULL, S.NAME, 
		APP.AMOUNT, FS.DESCRIPTION, '2' FROM AP_PAYMENT APP
		INNER JOIN SUPPLIER S ON APP.SUPPLIER_ID = S.SUPPLIER_ID
		INNER JOIN BANK_ACCOUNT BA ON APP.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID
		INNER JOIN FORM_WORKFLOW FW ON APP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
		INNER JOIN FORM_STATUS FS ON FW.CURRENT_STATUS_ID = FS.FORM_STATUS_ID
		INNER JOIN DIVISION D ON APP.DIVISION_ID = D.DIVISION_ID
		WHERE FW.CURRENT_STATUS_ID = 16
		AND IF(IN_DIVISION_ID != -1, D.DIVISION_ID = IN_DIVISION_ID, D.DIVISION_ID != IN_DIVISION_ID)
		AND BA.BANK_ACCOUNT_ID = IN_BANK_ACCT_ID
		AND APP.CHECK_DATE <= IN_AS_OF_DATE
		AND APP.DATE_CLEARED > IN_AS_OF_DATE
		AND APP.DATE_CLEARED IS NOT NULL
) as BANK_RECON_TBL ORDER BY DATE;
END//
