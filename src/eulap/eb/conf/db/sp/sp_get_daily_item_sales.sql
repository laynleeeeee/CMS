-- Description: Stored procedure that will get the item sales.


Delimiter //
DROP PROCEDURE IF EXISTS GET_DAILY_ITEM_SALES;//
CREATE PROCEDURE GET_DAILY_ITEM_SALES (IN IN_COMPANY_ID INT, IN IN_STOCK_CODE VARCHAR(50), IN IN_DATE_FROM DATE, IN IN_DATE_TO DATE, IN IN_ITEM_CATEGORY_ID INT,
IN IN_WAREHOUSE_ID INT)
BEGIN
	
SELECT DISTINCT STOCK_CODE, DESCRIPTION, NAME FROM (

-- Cash Sales
SELECT I.STOCK_CODE, I.DESCRIPTION, UM.NAME FROM ITEM I
INNER JOIN UNIT_MEASUREMENT UM ON UM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID 
INNER JOIN CASH_SALE_ITEM CSI ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = CS.COMPANY_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = CS.FORM_WORKFLOW_ID
INNER JOIN WAREHOUSE W ON CSI.WAREHOUSE_ID = W.WAREHOUSE_ID
WHERE IS_COMPLETE = 1
AND C.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STOCK_CODE LIKE "" THEN I.STOCK_CODE LIKE I.STOCK_CODE 
 ELSE I.STOCK_CODE LIKE IN_STOCK_CODE END)
AND (RECEIPT_DATE BETWEEN IN_DATE_FROM AND IN_DATE_TO)
AND (CASE WHEN IN_ITEM_CATEGORY_ID != -1 THEN I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID
 ELSE I.ITEM_CATEGORY_ID = I.ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID != -1 THEN CSI.WAREHOUSE_ID = IN_WAREHOUSE_ID
 ELSE CSI.WAREHOUSE_ID = CSI.WAREHOUSE_ID END)
GROUP BY I.STOCK_CODE

UNION ALL

-- Account Sales, Account Sale Wholesale, Account Sale- Individual Selection, Account Sales - CT and Account Sale Prescription
SELECT I.STOCK_CODE, I.DESCRIPTION, UM.NAME FROM ITEM I
INNER JOIN UNIT_MEASUREMENT UM ON UM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID 
INNER JOIN ACCOUNT_SALE_ITEM ASI ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = ART.COMPANY_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ART.FORM_WORKFLOW_ID
INNER JOIN WAREHOUSE W ON ASI.WAREHOUSE_ID = W.WAREHOUSE_ID
WHERE IS_COMPLETE = 1
AND C.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STOCK_CODE LIKE "" THEN I.STOCK_CODE LIKE I.STOCK_CODE 
 ELSE I.STOCK_CODE LIKE IN_STOCK_CODE END)
AND (TRANSACTION_DATE BETWEEN IN_DATE_FROM AND IN_DATE_TO)
-- 4 = Account Sale
-- 8 = Account Sale-Wholesale
-- 10 = Account Sale- Individual Selection
-- 12 = Account Sale - CT
-- 14 = Account Sale Prescription
AND (AR_TRANSACTION_TYPE_ID = 4 || AR_TRANSACTION_TYPE_ID = 8 || AR_TRANSACTION_TYPE_ID = 10 || AR_TRANSACTION_TYPE_ID = 12 || AR_TRANSACTION_TYPE_ID = 14) 
AND (CASE WHEN IN_ITEM_CATEGORY_ID != -1 THEN I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID
ELSE I.ITEM_CATEGORY_ID = I.ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID != -1 THEN ASI.WAREHOUSE_ID = IN_WAREHOUSE_ID
 ELSE ASI.WAREHOUSE_ID = ASI.WAREHOUSE_ID END)
GROUP BY I.STOCK_CODE

UNION ALL

SELECT I.STOCK_CODE, I.DESCRIPTION, UM.NAME FROM ITEM I
INNER JOIN UNIT_MEASUREMENT UM ON UM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID 
INNER JOIN CAP_DELIVERY_ITEM CDI ON I.ITEM_ID = CDI.ITEM_ID
INNER JOIN CAP_DELIVERY CAP_DEL ON CAP_DEL.CAP_DELIVERY_ID = CDI.CAP_DELIVERY_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = CAP_DEL.COMPANY_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = CAP_DEL.FORM_WORKFLOW_ID
INNER JOIN WAREHOUSE W ON CDI.WAREHOUSE_ID = W.WAREHOUSE_ID
WHERE IS_COMPLETE = 1
AND C.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STOCK_CODE LIKE "" THEN I.STOCK_CODE LIKE I.STOCK_CODE 
 ELSE I.STOCK_CODE LIKE IN_STOCK_CODE END)
AND (DELIVERY_DATE BETWEEN IN_DATE_FROM AND IN_DATE_TO)
AND (CASE WHEN IN_ITEM_CATEGORY_ID != -1 THEN I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID
 ELSE I.ITEM_CATEGORY_ID = I.ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID != -1 THEN CDI.WAREHOUSE_ID = IN_WAREHOUSE_ID
 ELSE CDI.WAREHOUSE_ID = CDI.WAREHOUSE_ID END)
GROUP BY I.STOCK_CODE
) AS ITEM_SALES ORDER BY STOCK_CODE;
END//