
-- Description	: Stored procedure that will get the BMS tracker report data

Delimiter //
DROP PROCEDURE IF EXISTS GET_BMS_TRACKER_DATA;//
CREATE PROCEDURE GET_BMS_TRACKER_DATA (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_TYPE_ID INT, IN IN_BMS_NUMBER VARCHAR(50),
IN IN_PO_DATE_FROM DATE, IN IN_PO_DATE_TO DATE, IN IN_INV_DATE_FROM DATE, IN IN_INV_DATE_TO DATE, IN IN_APP_FORM_STATUS_ID INT,
IN IN_LIMIT_FROM INT, IN IN_LIMIT_TO INT)

BEGIN

SELECT DIVISION, BMS_NUMBER, BMS_AMOUNT, PO_NUMBER, PO_DATE, PO_AMOUNT, PO_STATUS, SAP_DATE, SAP_AMOUNT, SAP_REQUESTOR,
API_NUMBER, INVOICE_DATE, REF_NUMBER, INVOICE_AMOUNT, CV_NUMBER, CHECK_NUMBER, CHECK_AMOUNT, CV_STATUS, TYPE_ID

FROM (

-- Purchase order
SELECT DISTINCT 1 AS TYPE_ID, D.NAME AS DIVISION, PO.BMS_NUMBER, COALESCE(GS.AMOUNT, 0) AS BMS_AMOUNT, PO.PO_NUMBER, PO.PO_DATE,
ROUND(COALESCE((SELECT SUM((POI.QUANTITY * COALESCE(POI.UNIT_COST, 0)) + COALESCE(POI.VAT_AMOUNT, 0))
FROM R_PURCHASE_ORDER_ITEM POI WHERE POI.R_PURCHASE_ORDER_ID = PO.R_PURCHASE_ORDER_ID), 0)
+ COALESCE((SELECT SUM(POL.QUANTITY * COALESCE(POL.UP_AMOUNT, 0)) FROM PURCHASE_ORDER_LINE POL 
WHERE POL.R_PURCHASE_ORDER_ID = PO.R_PURCHASE_ORDER_ID), 0), 2) AS PO_AMOUNT, FS.DESCRIPTION AS PO_STATUS,
SAP.DATE AS SAP_DATE, SAP.AMOUNT AS SAP_AMOUNT, SAP.REQUESTOR AS SAP_REQUESTOR,
GS.SEQUENCE_NO AS API_NUMBER, GS.INVOICE_DATE, GS.INVOICE_NUMBER AS REF_NUMBER,
COALESCE((SELECT SUM(APIG.AMOUNT) FROM AP_INVOICE_GOODS APIG
	WHERE APIG.AP_INVOICE_ID = GS.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(APIL.AMOUNT) FROM AP_INVOICE_LINE APIL
	WHERE APIL.AP_INVOICE_ID = GS.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(SI.UNIT_COST) FROM SERIAL_ITEM SI
	INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
	WHERE OTO.FROM_OBJECT_ID = GS.EB_OBJECT_ID
	AND SI.ACTIVE = 1 AND OTO.OR_TYPE_ID = 24001), 0) AS INVOICE_AMOUNT,
APP.VOUCHER_NO AS CV_NUMBER, APP.CHECK_NUMBER, COALESCE(APPL.PAID_AMOUNT, 0) AS CHECK_AMOUNT, FS1.DESCRIPTION AS CV_STATUS
FROM R_PURCHASE_ORDER PO
INNER JOIN DIVISION D ON D.DIVISION_ID = PO.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = PO.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID = FW.CURRENT_STATUS_ID
LEFT JOIN SUPPLIER_ADVANCE_PAYMENT SAP ON (SAP.R_PURCHASE_ORDER_ID = PO.R_PURCHASE_ORDER_ID
	AND SAP.FORM_WORKFLOW_ID = (SELECT FW.FORM_WORKFLOW_ID FROM FORM_WORKFLOW FW
	WHERE FW.IS_COMPLETE = 1 AND FW.FORM_WORKFLOW_ID = SAP.FORM_WORKFLOW_ID)
	AND SAP.EB_OBJECT_ID IN (SELECT OTO.FROM_OBJECT_ID FROM OBJECT_TO_OBJECT OTO
		INNER JOIN AP_PAYMENT_LINE APPL ON APPL.EB_OBJECT_ID = OTO.TO_OBJECT_ID
		INNER JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
		INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
		WHERE FW.IS_COMPLETE = 1 AND OTO.OR_TYPE_ID = 24004
		AND OTO.FROM_OBJECT_ID = SAP.EB_OBJECT_ID))
LEFT JOIN OBJECT_TO_OBJECT OTO1 ON (OTO1.FROM_OBJECT_ID = PO.EB_OBJECT_ID AND OTO1.OR_TYPE_ID = 74
	AND OTO1.TO_OBJECT_ID IN (SELECT OTO.FROM_OBJECT_ID FROM OBJECT_TO_OBJECT OTO WHERE OTO.OR_TYPE_ID = 24002))
LEFT JOIN AP_INVOICE RR ON (RR.EB_OBJECT_ID = OTO1.TO_OBJECT_ID AND RR.INVOICE_TYPE_ID IN (13, 14, 15, 16, 17, 18))
LEFT JOIN OBJECT_TO_OBJECT OTO2 ON (OTO2.FROM_OBJECT_ID = RR.EB_OBJECT_ID AND OTO2.OR_TYPE_ID = 24002
	AND OTO2.TO_OBJECT_ID IN (SELECT GS1.EB_OBJECT_ID FROM AP_INVOICE GS1
		INNER JOIN FORM_WORKFLOW FW3 ON FW3.FORM_WORKFLOW_ID = GS1.FORM_WORKFLOW_ID
		WHERE FW3.IS_COMPLETE = 1))
LEFT JOIN AP_INVOICE GS ON (GS.EB_OBJECT_ID = OTO2.TO_OBJECT_ID AND GS.INVOICE_TYPE_ID IN (25, 26, 27, 28, 29, 30))
LEFT JOIN OBJECT_TO_OBJECT OTO3 ON (OTO3.FROM_OBJECT_ID = GS.EB_OBJECT_ID AND OTO3.OR_TYPE_ID = 24004
	AND OTO3.TO_OBJECT_ID IN (SELECT APPL1.EB_OBJECT_ID FROM AP_PAYMENT_LINE APPL1
		INNER JOIN AP_PAYMENT APP1 ON APP1.AP_PAYMENT_ID = APPL1.AP_PAYMENT_ID
		INNER JOIN FORM_WORKFLOW FW2 ON FW2.FORM_WORKFLOW_ID = APP1.FORM_WORKFLOW_ID
		WHERE FW2.CURRENT_STATUS_ID NOT IN (1, 4, 32)))
LEFT JOIN AP_PAYMENT_LINE APPL ON (APPL.EB_OBJECT_ID = OTO3.TO_OBJECT_ID
	AND APPL.AP_PAYMENT_ID IN (SELECT APP1.AP_PAYMENT_ID FROM AP_PAYMENT APP1
		INNER JOIN FORM_WORKFLOW FW2 ON FW2.FORM_WORKFLOW_ID = APP1.FORM_WORKFLOW_ID
		WHERE FW2.CURRENT_STATUS_ID NOT IN (1, 4, 32)))
LEFT JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
LEFT JOIN FORM_WORKFLOW FW1 ON FW1.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
LEFT JOIN FORM_STATUS FS1 ON FS1.FORM_STATUS_ID = FW1.CURRENT_STATUS_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND PO.BMS_NUMBER != ''
AND PO.BMS_NUMBER LIKE IN_BMS_NUMBER
AND PO.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, PO.DIVISION_ID = IN_DIVISION_ID, PO.DIVISION_ID != IN_DIVISION_ID)
AND IF(IN_PO_DATE_FROM IS NOT NULL AND IN_PO_DATE_TO IS NOT NULL,
	PO.PO_DATE BETWEEN IN_PO_DATE_FROM AND IN_PO_DATE_TO, PO.PO_DATE IS NOT NULL)

UNION ALL

-- AP Invoice Non-PO
SELECT DISTINCT 2 AS TYPE_ID, D.NAME AS DIVISION, NON_PO.BMS_NUMBER, COALESCE(NON_PO.AMOUNT, 0) AS BMS_AMOUNT,
NULL AS PO_NUMBER, NULL AS PO_DATE, 0 AS PO_AMOUNT, ' ' AS PO_STATUS, NULL AS SAP_DATE, 0 AS SAP_AMOUNT, ' ' AS SAP_REQUESTOR,
NON_PO.SEQUENCE_NO AS API_NUMBER, NON_PO.INVOICE_DATE, NON_PO.INVOICE_NUMBER AS REF_NUMBER,
COALESCE((SELECT SUM(APL.AMOUNT) FROM AP_LINE APL WHERE APL.AP_INVOICE_ID = NON_PO.AP_INVOICE_ID), 0) AS INVOICE_AMOUNT,
APP.VOUCHER_NO AS CV_NUMBER, APP.CHECK_NUMBER, COALESCE(APPL.PAID_AMOUNT, 0) AS CHECK_AMOUNT, FS1.DESCRIPTION AS CV_STATUS
FROM AP_INVOICE NON_PO
INNER JOIN DIVISION D ON D.DIVISION_ID = NON_PO.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = NON_PO.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID = FW.CURRENT_STATUS_ID
LEFT JOIN OBJECT_TO_OBJECT OTO ON (OTO.FROM_OBJECT_ID = NON_PO.EB_OBJECT_ID AND OTO.OR_TYPE_ID = 24004
	AND OTO.TO_OBJECT_ID IN (SELECT APPL1.EB_OBJECT_ID FROM AP_PAYMENT_LINE APPL1
		INNER JOIN AP_PAYMENT APP1 ON APP1.AP_PAYMENT_ID = APPL1.AP_PAYMENT_ID
		INNER JOIN FORM_WORKFLOW FW2 ON FW2.FORM_WORKFLOW_ID = APP1.FORM_WORKFLOW_ID
		WHERE FW2.CURRENT_STATUS_ID NOT IN (1, 4, 32)))
LEFT JOIN AP_PAYMENT_LINE APPL ON (APPL.EB_OBJECT_ID = OTO.TO_OBJECT_ID
	AND APPL.AP_PAYMENT_ID IN (SELECT APP1.AP_PAYMENT_ID FROM AP_PAYMENT APP1
		INNER JOIN FORM_WORKFLOW FW2 ON FW2.FORM_WORKFLOW_ID = APP1.FORM_WORKFLOW_ID
		WHERE FW2.CURRENT_STATUS_ID NOT IN (1, 4, 32)))
LEFT JOIN AP_PAYMENT APP ON APP.AP_PAYMENT_ID = APPL.AP_PAYMENT_ID
LEFT JOIN FORM_WORKFLOW FW1 ON FW1.FORM_WORKFLOW_ID = APP.FORM_WORKFLOW_ID
LEFT JOIN FORM_STATUS FS1 ON FS1.FORM_STATUS_ID = FW1.CURRENT_STATUS_ID
WHERE FW.IS_COMPLETE = 1
AND NON_PO.INVOICE_TYPE_ID IN (19, 20, 21, 22, 23, 24)
AND NON_PO.BMS_NUMBER != ''
AND NON_PO.BMS_NUMBER LIKE IN_BMS_NUMBER
AND NON_PO.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, NON_PO.DIVISION_ID = IN_DIVISION_ID, NON_PO.DIVISION_ID != IN_DIVISION_ID)
AND IF(IN_INV_DATE_FROM IS NOT NULL AND IN_INV_DATE_TO IS NOT NULL,
	NON_PO.INVOICE_DATE BETWEEN IN_INV_DATE_FROM AND IN_INV_DATE_TO, NON_PO.INVOICE_DATE IS NOT NULL)

UNION ALL

-- Petty cash voucher liquidation
SELECT 2 AS TYPE_ID, D.NAME AS DIVISION, PCVLL.BMS_NUMBER, COALESCE(PCVLL.AMOUNT, 0) AS BMS_AMOUNT,
NULL AS PO_NUMBER, NULL AS PO_DATE, 0 AS PO_AMOUNT, ' ' AS PO_STATUS, NULL AS SAP_DATE, 0 AS SAP_AMOUNT, ' ' AS SAP_REQUESTOR,
PCVL.SEQUENCE_NO AS API_NUMBER, PCVL.PCVL_DATE AS INVOICE_DATE, PCVLL.OR_NUMBER AS REF_NUMBER, PCVLL.AMOUNT AS INVOICE_AMOUNT,
NULL AS CV_NUMBER, ' ' AS CHECK_NUMBER, 0 AS CHECK_AMOUNT, ' ' AS CV_STATUS 
FROM PETTY_CASH_VOUCHER_LIQUIDATION_LINE PCVLL
INNER JOIN PETTY_CASH_VOUCHER_LIQUIDATION PCVL ON PCVL.PETTY_CASH_VOUCHER_LIQUIDATION_ID = PCVLL.PETTY_CASH_VOUCHER_LIQUIDATION_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = PCVL.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = PCVL.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND PCVLL.BMS_NUMBER IS NOT NULL
AND PCVLL.BMS_NUMBER LIKE IN_BMS_NUMBER
AND PCVL.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, PCVL.DIVISION_ID = IN_DIVISION_ID, PCVL.DIVISION_ID != IN_DIVISION_ID)
AND IF(IN_INV_DATE_FROM IS NOT NULL AND IN_INV_DATE_TO IS NOT NULL,
	PCVL.PCVL_DATE BETWEEN IN_INV_DATE_FROM AND IN_INV_DATE_TO, PCVL.PCVL_DATE IS NOT NULL)

) AS BMS_TRACKER_TBL
WHERE IF(IN_TYPE_ID > 0, TYPE_ID = IN_TYPE_ID, TYPE_ID != IN_TYPE_ID)
AND IF(IN_APP_FORM_STATUS_ID > 0, CHECK_AMOUNT != 0, CHECK_AMOUNT >= 0);
END//