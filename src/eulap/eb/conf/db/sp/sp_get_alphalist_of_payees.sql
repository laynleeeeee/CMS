-- Description: Stored proceedure that will the Monthly Alphalist of Payees by filters. 


DELIMITER //
DROP PROCEDURE IF EXISTS GET_ALPHALIST_OF_PAYEES;//
CREATE PROCEDURE GET_ALPHALIST_OF_PAYEES (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_MONTH_FROM INT, IN IN_MONTH_TO INT, IN IN_YEAR INT, IN IN_WT_TYPE_ID VARCHAR(1000))
BEGIN

SELECT TBL.SUPPLIER_ID AS SUPPLIER_ID, TBL.TIN AS TIN, TBL.CORPORATE_NAME AS CORPORATE_NAME, TBL.NAME AS NAME, TBL.LAST_NAME AS LAST_NAME, TBL.FIRST_NAME AS FIRST_NAME,
TBL.MIDDLE_NAME AS MIDDLE_NAME, TBL.ATC_CODE AS ATC_CODE, TBL.DESCRIPTION AS DESCRIPTION, SUM(TBL.AMOUNT) AS AMOUNT, TBL.TAX_RATE AS TAX_RATE,
SUM(TBL.WT_AMOUNT) AS WT_AMOUNT, TBL.INVOICE_TYPE_ID AS INVOICE_TYPE_ID, TBL.PAYEES_ADDRESS AS PAYEES_ADDRESS FROM (

SELECT S.SUPPLIER_ID, AI.AP_INVOICE_ID, AI.INVOICE_TYPE_ID, S.TIN, IF(S.BUSINESS_CLASSIFICATION_ID = 2, S.NAME, '') AS CORPORATE_NAME,
IF(S.BUSINESS_CLASSIFICATION_ID = 1, CONCAT(S.LAST_NAME, ', ', S.FIRST_NAME, ' ', COALESCE(S.MIDDLE_NAME, '')), '') AS NAME,
BA.NAME AS ATC_CODE, BA.DESCRIPTION, S.LAST_NAME, S.FIRST_NAME, S.MIDDLE_NAME,
(COALESCE((SELECT SUM(AL.AMOUNT) FROM AP_LINE AL WHERE AL.AP_INVOICE_ID = AI.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(AIL.AMOUNT) FROM AP_INVOICE_LINE AIL WHERE AIL.AP_INVOICE_ID = AI.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(AIG.QUANTITY * COALESCE(AIG.UNIT_COST, 0)) FROM AP_INVOICE_GOODS AIG WHERE AIG.AP_INVOICE_ID = AI.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(SI.UNIT_COST) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
	WHERE OTO.FROM_OBJECT_ID = AI.EB_OBJECT_ID AND OTO.OR_TYPE_ID = 24001 AND SI.ACTIVE = 1), 0)) AS AMOUNT,
WAS.VALUE AS TAX_RATE, AI.WT_AMOUNT, CONCAT(S.STREET_BRGY,' ',S.CITY_PROVINCE) AS PAYEES_ADDRESS
FROM AP_INVOICE AI
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = AI.SUPPLIER_ID
INNER JOIN WT_ACCOUNT_SETTING WAS ON WAS.WT_ACCOUNT_SETTING_ID = AI.WT_ACCOUNT_SETTING_ID
INNER JOIN BIR_ATC BA ON BA.BIR_ATC_ID = WAS.BIR_ATC_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = AI.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND AI.INVOICE_TYPE_ID IN (19,20,21,22,23,24,25,26,27,28,29,30,37,38,39,40,41,42,49,50,51,52,53,54)
AND IF(IN_COMPANY_ID != -1, AI.COMPANY_ID = IN_COMPANY_ID, AI.COMPANY_ID != IN_COMPANY_ID)
AND IF(IN_DIVISION_ID != -1, AI.DIVISION_ID = IN_DIVISION_ID, AI.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(AI.GL_DATE) = IN_YEAR
AND MONTH(AI.GL_DATE) BETWEEN IN_MONTH_FROM AND IN_MONTH_TO
AND AI.WT_ACCOUNT_SETTING_ID IS NOT NULL
AND FIND_IN_SET(WAS.WT_TYPE_ID, IN_WT_TYPE_ID) > 0

UNION ALL

SELECT S.SUPPLIER_ID, AI.AP_INVOICE_ID, AI.INVOICE_TYPE_ID, S.TIN, IF(S.BUSINESS_CLASSIFICATION_ID = 2, S.NAME, '') AS CORPORATE_NAME,
IF(S.BUSINESS_CLASSIFICATION_ID = 1, CONCAT(S.LAST_NAME, ', ', S.FIRST_NAME, ' ', COALESCE(S.MIDDLE_NAME, '')), '') AS NAME,
BA.NAME AS ATC_CODE, BA.DESCRIPTION, S.LAST_NAME, S.FIRST_NAME, S.MIDDLE_NAME,
-(COALESCE((SELECT SUM(AIL.AMOUNT) FROM AP_INVOICE_LINE AIL WHERE AIL.AP_INVOICE_ID = AI.AP_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(SI.UNIT_COST) FROM SERIAL_ITEM SI INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
	WHERE OTO.FROM_OBJECT_ID = AI.EB_OBJECT_ID AND OTO.OR_TYPE_ID IN (24005, 105) AND SI.ACTIVE = 1), 0)
+ COALESCE((SELECT SUM((RTSI.QUANTITY * COALESCE(RTSI.UNIT_COST))) FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
	WHERE RTSI.AP_INVOICE_ID = AI.AP_INVOICE_ID) , 0)) AS AMOUNT, -WAS.VALUE AS TAX_RATE, -AI.WT_AMOUNT,
CONCAT(S.STREET_BRGY,' ',S.CITY_PROVINCE) AS PAYEES_ADDRESS
FROM AP_INVOICE AI
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = AI.SUPPLIER_ID
INNER JOIN WT_ACCOUNT_SETTING WAS ON WAS.WT_ACCOUNT_SETTING_ID = AI.WT_ACCOUNT_SETTING_ID
INNER JOIN BIR_ATC BA ON BA.BIR_ATC_ID = WAS.BIR_ATC_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = AI.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND AI.INVOICE_TYPE_ID IN (31,32,33,34,35,36)
AND IF(IN_COMPANY_ID != -1, AI.COMPANY_ID = IN_COMPANY_ID, AI.COMPANY_ID != IN_COMPANY_ID)
AND IF(IN_DIVISION_ID != -1, AI.DIVISION_ID = IN_DIVISION_ID, AI.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(AI.GL_DATE) = IN_YEAR
AND MONTH(AI.GL_DATE) BETWEEN IN_MONTH_FROM AND IN_MONTH_TO
AND AI.WT_ACCOUNT_SETTING_ID IS NOT NULL
AND FIND_IN_SET(WAS.WT_TYPE_ID, IN_WT_TYPE_ID) > 0

) AS TBL GROUP BY SUPPLIER_ID, ATC_CODE
HAVING (AMOUNT) NOT BETWEEN -0.009 AND 0.009
ORDER BY CORPORATE_NAME, NAME;
END//