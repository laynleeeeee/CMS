-- Description: Stored proceedure that will get the sales report data.


Delimiter //
DROP procedure if exists GET_SALES_REPORT; //
CREATE procedure GET_SALES_REPORT (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_SALES_PERSONNEL_ID INT, IN IN_DATE_FROM DATE,
IN IN_DATE_TO DATE, IN_CURRENCY_ID INT, IN IN_LIMIT_FROM INT, IN IN_LIMIT_TO INT)

BEGIN

SELECT SO_ID, SO_DATE, SO_NUMBER, PO_NUMBER, SO_GROSS_AMOUNT, TERM, CUSTOMER_ACCT, CUSTOMER, SALES_PERSONNEL, GROUP_CONCAT(DISTINCT DR_NUMBER SEPARATOR ', ') AS DR_NUMBER,
GROUP_CONCAT(DISTINCT DR_REF_NO SEPARATOR ', ') AS DR_REF_NO,  GROUP_CONCAT(DISTINCT DR_DATE SEPARATOR ', ') AS DR_DATE, GROUP_CONCAT(DISTINCT DR_RECEIVE_DATE SEPARATOR ', ') AS DR_RECEIVE_DATE, 
GROUP_CONCAT(DISTINCT DR_RECEIVER SEPARATOR ', ') AS DR_RECEIVER, GROUP_CONCAT(DISTINCT DR_STATUS SEPARATOR ', ') AS DR_STATUS,
GROUP_CONCAT(DISTINCT ARI_DATE SEPARATOR ', ') AS ARI_DATE, GROUP_CONCAT(DISTINCT ARI_RECEIVED_DATE SEPARATOR ', ') AS ARI_RECEIVED_DATE, 
GROUP_CONCAT(DISTINCT ARI_RECEIVER SEPARATOR ', ') AS ARI_RECEIVER, GROUP_CONCAT(DISTINCT ARI_NUMBER SEPARATOR ', ') AS ARI_NUMBER, 
SUM(NET_AMT) AS TOTAL_NET, SUM(VAT_AMT) AS TOTAL_VAT, SUM(GROSS_AMT) AS TOTAL_GROSS, WTAX_AMOUNT, CURRENCY, GROUP_CONCAT(AC_NUMBER SEPARATOR ', ') AS AC_NUMBER,
SUM(AMT_COLLECTED) AS TOTAL_COLLECTED, (SUM(INVOICE_AMT) - SUM(AMT_COLLECTED)) AS BALANCE, GROUP_CONCAT(AC_DATE SEPARATOR ', ') AS AC_DATE,
ARI_NUMBER AS GROUP_ARI_NUMBER, DR_NUMBER AS GROUP_DR_NUMBER FROM (

-- Serialized item
SELECT SO.SALES_ORDER_ID AS SO_ID, SO.DATE AS SO_DATE, SO.SEQUENCE_NO AS SO_NUMBER, SO.PO_NUMBER AS PO_NUMBER,
COALESCE((SELECT SUM(SOI.QUANTITY * SOI.GROSS_AMOUNT) FROM SALES_ORDER_ITEM SOI WHERE SOI.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0)
+ COALESCE((SELECT SUM(SOL.QUANTITY * SOL.UP_AMOUNT) FROM SALES_ORDER_LINE SOL WHERE SOL.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0) AS SO_GROSS_AMOUNT,
T.NAME AS TERM, ARCA.NAME AS CUSTOMER_ACCT, ARC.NAME AS CUSTOMER, SP.NAME AS SALES_PERSONNEL, DR.SEQUENCE_NO AS DR_NUMBER,
DR.DR_REF_NUMBER AS DR_REF_NO, DR.DATE AS DR_DATE, DR.DATE_RECEIVED AS DR_RECEIVE_DATE, DR.RECEIVER AS DR_RECEIVER,
DR_FS.DESCRIPTION AS DR_STATUS, ARI.DATE AS ARI_DATE, ARI.DATE_RECEIVED AS ARI_RECEIVED_DATE, ARI.RECEIVER AS ARI_RECEIVER,
ARI.SEQUENCE_NO AS ARI_NUMBER, SUM(SI.AMOUNT) AS NET_AMT, SUM(COALESCE(SI.VAT_AMOUNT, 0)) AS VAT_AMT,
SUM(SI.AMOUNT + COALESCE(SI.VAT_AMOUNT, 0) + COALESCE(SI.DISCOUNT, 0)) AS GROSS_AMT,
COALESCE(ARI.WT_AMOUNT, 0) AS WTAX_AMOUNT, C.NAME AS CURRENCY, NULL AS AC_NUMBER, 0 AS AMT_COLLECTED, NULL AS AC_DATE,
ARI.AMOUNT AS INVOICE_AMT, 0 AS AC_HEADER_AMOUNT
FROM SALES_ORDER SO
INNER JOIN TERM T ON T.TERM_ID = SO.TERM_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ARCA ON ARCA.AR_CUSTOMER_ACCOUNT_ID = SO.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN AR_CUSTOMER ARC ON ARC.AR_CUSTOMER_ID = SO.AR_CUSTOMER_ID
INNER JOIN CURRENCY C ON C.CURRENCY_ID = SO.CURRENCY_ID
INNER JOIN DELIVERY_RECEIPT DR ON DR.SALES_ORDER_ID = SO.SALES_ORDER_ID
INNER JOIN SALES_PERSONNEL SP ON SP.SALES_PERSONNEL_ID = DR.SALES_PERSONNEL_ID
INNER JOIN FORM_WORKFLOW DR_FW ON DR_FW.FORM_WORKFLOW_ID = DR.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS DR_FS ON DR_FS.FORM_STATUS_ID = DR_FW.CURRENT_STATUS_ID 
INNER JOIN AR_INVOICE ARI ON FIND_IN_SET(DR.DELIVERY_RECEIPT_ID, (REPLACE(ARI.DR_REFERENCE_IDS, ' ', '')))
LEFT JOIN WT_ACCOUNT_SETTING WTAS ON WTAS.WT_ACCOUNT_SETTING_ID = ARI.WT_ACCOUNT_SETTING_ID
INNER JOIN OBJECT_TO_OBJECT ARI_SI_OTO ON ARI_SI_OTO.FROM_OBJECT_ID = ARI.EB_OBJECT_ID
INNER JOIN SERIAL_ITEM SI ON SI.EB_OBJECT_ID = ARI_SI_OTO.TO_OBJECT_ID
INNER JOIN FORM_WORKFLOW ARI_FW ON ARI_FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
WHERE ARI_FW.IS_COMPLETE = 1
AND SI.ACTIVE = 1
AND ARI_SI_OTO.OR_TYPE_ID = 12006
AND SO.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SO.DIVISION_ID = IN_DIVISION_ID ELSE SO.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_CURRENCY_ID != -1 THEN SO.CURRENCY_ID = IN_CURRENCY_ID ELSE SO.CURRENCY_ID != IN_CURRENCY_ID END)
AND (CASE WHEN IN_SALES_PERSONNEL_ID != -1 THEN DR.SALES_PERSONNEL_ID = IN_SALES_PERSONNEL_ID
	ELSE DR.SALES_PERSONNEL_ID != IN_SALES_PERSONNEL_ID END)
AND ARI.DATE_RECEIVED BETWEEN IN_DATE_FROM AND IN_DATE_TO
GROUP BY SO.SALES_ORDER_ID, DR.DELIVERY_RECEIPT_ID, ARI.AR_INVOICE_ID

UNION ALL

-- Non serialized item
SELECT SO.SALES_ORDER_ID AS SO_ID, SO.DATE AS SO_DATE, SO.SEQUENCE_NO AS SO_NUMBER, SO.PO_NUMBER AS PO_NUMBER,
COALESCE((SELECT SUM(SOI.QUANTITY * SOI.GROSS_AMOUNT) FROM SALES_ORDER_ITEM SOI WHERE SOI.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0)
+ COALESCE((SELECT SUM(SOL.QUANTITY * SOL.UP_AMOUNT) FROM SALES_ORDER_LINE SOL WHERE SOL.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0) AS SO_GROSS_AMOUNT,
T.NAME AS TERM, ARCA.NAME AS CUSTOMER_ACCT, ARC.NAME AS CUSTOMER, SP.NAME AS SALES_PERSONNEL, DR.SEQUENCE_NO AS DR_NUMBER,
DR.DR_REF_NUMBER AS DR_REF_NO, DR.DATE AS DR_DATE, DR.DATE_RECEIVED AS DR_RECEIVE_DATE, DR.RECEIVER AS DR_RECEIVER,
DR_FS.DESCRIPTION AS DR_STATUS, ARI.DATE AS ARI_DATE, ARI.DATE_RECEIVED AS ARI_RECEIVED_DATE, ARI.RECEIVER AS ARI_RECEIVER,
ARI.SEQUENCE_NO AS ARI_NUMBER, SUM(ARII.AMOUNT) AS NET_AMT, SUM(COALESCE(ARII.VAT_AMOUNT, 0)) AS VAT_AMT, SUM(ARII.AMOUNT + COALESCE(ARII.VAT_AMOUNT, 0) + COALESCE(ARII.DISCOUNT, 0)) AS GROSS_AMT,
COALESCE(ARI.WT_AMOUNT, 0) AS WTAX_AMOUNT, C.NAME AS CURRENCY, NULL AS AC_NUMBER, 0 AS AMT_COLLECTED, NULL AS AC_DATE,
ARI.AMOUNT AS INVOICE_AMT, 0 AS AC_HEADER_AMOUNT
FROM SALES_ORDER SO
INNER JOIN TERM T ON T.TERM_ID = SO.TERM_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ARCA ON ARCA.AR_CUSTOMER_ACCOUNT_ID = SO.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN AR_CUSTOMER ARC ON ARC.AR_CUSTOMER_ID = SO.AR_CUSTOMER_ID
INNER JOIN CURRENCY C ON C.CURRENCY_ID = SO.CURRENCY_ID
INNER JOIN DELIVERY_RECEIPT DR ON DR.SALES_ORDER_ID = SO.SALES_ORDER_ID
INNER JOIN SALES_PERSONNEL SP ON SP.SALES_PERSONNEL_ID = DR.SALES_PERSONNEL_ID 
INNER JOIN FORM_WORKFLOW DR_FW ON DR_FW.FORM_WORKFLOW_ID = DR.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS DR_FS ON DR_FS.FORM_STATUS_ID = DR_FW.CURRENT_STATUS_ID 
INNER JOIN AR_INVOICE ARI ON FIND_IN_SET(DR.DELIVERY_RECEIPT_ID, (REPLACE(ARI.DR_REFERENCE_IDS, ' ', '')))
LEFT JOIN WT_ACCOUNT_SETTING WTAS ON WTAS.WT_ACCOUNT_SETTING_ID = ARI.WT_ACCOUNT_SETTING_ID
INNER JOIN AR_INVOICE_ITEM ARII ON ARII.AR_INVOICE_ID = ARI.AR_INVOICE_ID
INNER JOIN FORM_WORKFLOW ARI_FW ON ARI_FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
WHERE ARI_FW.IS_COMPLETE = 1
AND SO.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SO.DIVISION_ID = IN_DIVISION_ID ELSE SO.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_CURRENCY_ID != -1 THEN SO.CURRENCY_ID = IN_CURRENCY_ID ELSE SO.CURRENCY_ID != IN_CURRENCY_ID END)
AND (CASE WHEN IN_SALES_PERSONNEL_ID != -1 THEN DR.SALES_PERSONNEL_ID = IN_SALES_PERSONNEL_ID
	ELSE DR.SALES_PERSONNEL_ID != IN_SALES_PERSONNEL_ID END)
AND ARI.DATE_RECEIVED BETWEEN IN_DATE_FROM AND IN_DATE_TO
GROUP BY SO.SALES_ORDER_ID, DR.DELIVERY_RECEIPT_ID, ARI.AR_INVOICE_ID

UNION ALL

-- ARI-LINE
SELECT SO.SALES_ORDER_ID AS SO_ID, SO.DATE AS SO_DATE, SO.SEQUENCE_NO AS SO_NUMBER, SO.PO_NUMBER AS PO_NUMBER,
COALESCE((SELECT SUM(SOI.QUANTITY * SOI.GROSS_AMOUNT) FROM SALES_ORDER_ITEM SOI WHERE SOI.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0)
+ COALESCE((SELECT SUM(SOL.QUANTITY * SOL.UP_AMOUNT) FROM SALES_ORDER_LINE SOL WHERE SOL.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0) AS SO_GROSS_AMOUNT,
T.NAME AS TERM, ARCA.NAME AS CUSTOMER_ACCT, ARC.NAME AS CUSTOMER, SP.NAME AS SALES_PERSONNEL, DR.SEQUENCE_NO AS DR_NUMBER,
DR.DR_REF_NUMBER AS DR_REF_NO, DR.DATE AS DR_DATE, DR.DATE_RECEIVED AS DR_RECEIVE_DATE, DR.RECEIVER AS DR_RECEIVER,
DR_FS.DESCRIPTION AS DR_STATUS, ARI.DATE AS ARI_DATE, ARI.DATE_RECEIVED AS ARI_RECEIVED_DATE, ARI.RECEIVER AS ARI_RECEIVER,
ARI.SEQUENCE_NO AS ARI_NUMBER, SUM(ARL.AMOUNT) AS NET_AMT, SUM(COALESCE(ARL.VAT_AMOUNT, 0)) AS VAT_AMT, SUM(ARL.AMOUNT + COALESCE(ARL.VAT_AMOUNT, 0) + COALESCE(ARL.DISCOUNT, 0)) AS GROSS_AMT,
COALESCE(ARI.WT_AMOUNT, 0) AS WTAX_AMOUNT, C.NAME AS CURRENCY, NULL AS AC_NUMBER, 0 AS AMT_COLLECTED, NULL AS AC_DATE,
ARI.AMOUNT AS INVOICE_AMT, 0 AS AC_HEADER_AMOUNT
FROM SALES_ORDER SO
INNER JOIN TERM T ON T.TERM_ID = SO.TERM_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ARCA ON ARCA.AR_CUSTOMER_ACCOUNT_ID = SO.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN AR_CUSTOMER ARC ON ARC.AR_CUSTOMER_ID = SO.AR_CUSTOMER_ID
INNER JOIN CURRENCY C ON C.CURRENCY_ID = SO.CURRENCY_ID
INNER JOIN DELIVERY_RECEIPT DR ON DR.SALES_ORDER_ID = SO.SALES_ORDER_ID
INNER JOIN SALES_PERSONNEL SP ON SP.SALES_PERSONNEL_ID = DR.SALES_PERSONNEL_ID 
INNER JOIN FORM_WORKFLOW DR_FW ON DR_FW.FORM_WORKFLOW_ID = DR.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS DR_FS ON DR_FS.FORM_STATUS_ID = DR_FW.CURRENT_STATUS_ID 
INNER JOIN AR_INVOICE ARI ON FIND_IN_SET(DR.DELIVERY_RECEIPT_ID, (REPLACE(ARI.DR_REFERENCE_IDS, ' ', '')))
LEFT JOIN WT_ACCOUNT_SETTING WTAS ON WTAS.WT_ACCOUNT_SETTING_ID = ARI.WT_ACCOUNT_SETTING_ID
INNER JOIN AR_INVOICE_LINE ARL ON ARL.AR_INVOICE_ID = ARI.AR_INVOICE_ID
INNER JOIN FORM_WORKFLOW ARI_FW ON ARI_FW.FORM_WORKFLOW_ID = ARI.FORM_WORKFLOW_ID
WHERE ARI_FW.IS_COMPLETE = 1
AND SO.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SO.DIVISION_ID = IN_DIVISION_ID ELSE SO.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_CURRENCY_ID != -1 THEN SO.CURRENCY_ID = IN_CURRENCY_ID ELSE SO.CURRENCY_ID != IN_CURRENCY_ID END)
AND (CASE WHEN IN_SALES_PERSONNEL_ID != -1 THEN DR.SALES_PERSONNEL_ID = IN_SALES_PERSONNEL_ID
	ELSE DR.SALES_PERSONNEL_ID != IN_SALES_PERSONNEL_ID END)
AND ARI.DATE_RECEIVED BETWEEN IN_DATE_FROM AND IN_DATE_TO
GROUP BY SO.SALES_ORDER_ID, DR.DELIVERY_RECEIPT_ID, ARI.AR_INVOICE_ID

UNION ALL

-- AC
SELECT SO.SALES_ORDER_ID AS SO_ID, SO.DATE AS SO_DATE, SO.SEQUENCE_NO AS SO_NUMBER, SO.PO_NUMBER AS PO_NUMBER,
COALESCE((SELECT SUM(SOI.QUANTITY * SOI.GROSS_AMOUNT) FROM SALES_ORDER_ITEM SOI WHERE SOI.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0)
+ COALESCE((SELECT SUM(SOL.QUANTITY * SOL.UP_AMOUNT) FROM SALES_ORDER_LINE SOL WHERE SOL.SALES_ORDER_ID = SO.SALES_ORDER_ID), 0) AS SO_GROSS_AMOUNT,
T.NAME AS TERM, ARCA.NAME AS CUSTOMER_ACCT, ARC.NAME AS CUSTOMER, SP.NAME AS SALES_PERSONNEL, DR.SEQUENCE_NO AS DR_NUMBER,
DR.DR_REF_NUMBER AS DR_REF_NO, DR.DATE AS DR_DATE, DR.DATE_RECEIVED AS DR_RECEIVE_DATE, DR.RECEIVER AS DR_RECEIVER,
DR_FS.DESCRIPTION AS DR_STATUS, ARI.DATE AS ARI_DATE, ARI.DATE_RECEIVED AS ARI_RECEIVED_DATE, ARI.RECEIVER AS ARI_RECEIVER,
ARI.SEQUENCE_NO AS ARI_NUMBER, 0 AS NET_AMT, 0 AS VAT_AMT, 0 AS GROSS_AMT, COALESCE(ARI.WT_AMOUNT, 0) AS WTAX_AMOUNT, C.NAME AS CURRENCY,
AC.SEQUENCE_NO AS AC_NUMBER, ACL.AMOUNT AS AMT_COLLECTED, AC.RECEIPT_DATE AS AC_DATE,
0 AS INVOICE_AMT,
AC.AMOUNT AS AC_HEADER_AMOUNT
FROM SALES_ORDER SO
INNER JOIN TERM T ON T.TERM_ID = SO.TERM_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ARCA ON ARCA.AR_CUSTOMER_ACCOUNT_ID = SO.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN AR_CUSTOMER ARC ON ARC.AR_CUSTOMER_ID = SO.AR_CUSTOMER_ID
INNER JOIN CURRENCY C ON C.CURRENCY_ID = SO.CURRENCY_ID
INNER JOIN DELIVERY_RECEIPT DR ON DR.SALES_ORDER_ID = SO.SALES_ORDER_ID
INNER JOIN SALES_PERSONNEL SP ON SP.SALES_PERSONNEL_ID = DR.SALES_PERSONNEL_ID 
INNER JOIN FORM_WORKFLOW DR_FW ON DR_FW.FORM_WORKFLOW_ID = DR.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS DR_FS ON DR_FS.FORM_STATUS_ID = DR_FW.CURRENT_STATUS_ID 
INNER JOIN AR_INVOICE ARI ON FIND_IN_SET(DR.DELIVERY_RECEIPT_ID, (REPLACE(ARI.DR_REFERENCE_IDS, ' ', '')))
INNER JOIN OBJECT_TO_OBJECT ACL_OTO ON ACL_OTO.FROM_OBJECT_ID = ARI.EB_OBJECT_ID
INNER JOIN AR_RECEIPT_LINE ACL ON ACL.EB_OBJECT_ID = ACL_OTO.TO_OBJECT_ID
INNER JOIN AR_RECEIPT AC ON AC.AR_RECEIPT_ID = ACL.AR_RECEIPT_ID
INNER JOIN FORM_WORKFLOW AC_FW ON AC_FW.FORM_WORKFLOW_ID = AC.FORM_WORKFLOW_ID
WHERE SO.COMPANY_ID = IN_COMPANY_ID
AND AC_FW.CURRENT_STATUS_ID != 4
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SO.DIVISION_ID = IN_DIVISION_ID ELSE SO.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_CURRENCY_ID != -1 THEN SO.CURRENCY_ID = IN_CURRENCY_ID ELSE SO.CURRENCY_ID != IN_CURRENCY_ID END)
AND (CASE WHEN IN_SALES_PERSONNEL_ID != -1 THEN DR.SALES_PERSONNEL_ID = IN_SALES_PERSONNEL_ID
	ELSE DR.SALES_PERSONNEL_ID != IN_SALES_PERSONNEL_ID END)
AND ARI.DATE_RECEIVED BETWEEN IN_DATE_FROM AND IN_DATE_TO
GROUP BY SO.SALES_ORDER_ID, DR.DELIVERY_RECEIPT_ID, ARI.AR_INVOICE_ID, ACL.AR_RECEIPT_LINE_ID

) AS TBL GROUP BY SO_ID, GROUP_ARI_NUMBER, GROUP_DR_NUMBER;

END//