-- Description: Stored proceedure that will the sales delivery efficiency by filters. 


DELIMITER //
DROP PROCEDURE IF EXISTS GET_SAWT;//
CREATE PROCEDURE GET_SAWT (IN IN_COMPANY_ID INT, IN IN_DIVISION_ID INT, IN IN_ATC_CODE INT, IN IN_MONTH_FROM INT, IN IN_MONTH_TO INT, IN IN_YEAR INT)
BEGIN

SELECT AR_CUSTOMER_ID, TIN, CORPORATE_NAME, NAME, ATC_CODE, DESCRIPTION, AMOUNT, TAX_RATE, WT_AMOUNT, LAST_NAME, FIRST_NAME, MIDDLE_NAME FROM (

SELECT AR_CUSTOMER_ID, TIN, CORPORATE_NAME, NAME, ATC_CODE, DESCRIPTION, SUM(AMOUNT) AS AMOUNT, TAX_RATE,
SUM(WT_AMOUNT) AS WT_AMOUNT, LAST_NAME, FIRST_NAME, MIDDLE_NAME FROM (

SELECT AC.AR_CUSTOMER_ID, AC.TIN, IF(AC.BUSINESS_CLASSIFICATION_ID = 2, AC.NAME, '') AS CORPORATE_NAME,
IF(AC.BUSINESS_CLASSIFICATION_ID = 1, CONCAT(AC.LAST_NAME,', ', AC.FIRST_NAME, AC.MIDDLE_NAME), '') AS NAME,
BA.NAME AS ATC_CODE, BA.DESCRIPTION, COALESCE((SELECT SUM(SI.AMOUNT) FROM SERIAL_ITEM SI
	INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
	WHERE OTO.FROM_OBJECT_ID = AI.EB_OBJECT_ID AND OTO.OR_TYPE_ID = 12006 AND SI.ACTIVE = 1), 0)
+ COALESCE((SELECT SUM(ARII.AMOUNT) FROM AR_INVOICE_ITEM ARII WHERE ARII.AR_INVOICE_ID = AI.AR_INVOICE_ID), 0)
+ COALESCE((SELECT SUM(ARIL.AMOUNT) FROM AR_INVOICE_LINE ARIL WHERE ARIL.AR_INVOICE_ID = AI.AR_INVOICE_ID), 0)
AS AMOUNT, WAS.VALUE AS TAX_RATE, AI.WT_AMOUNT, AC.LAST_NAME, AC.FIRST_NAME, AC.MIDDLE_NAME
FROM AR_INVOICE AI
INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = AI.AR_CUSTOMER_ID
INNER JOIN WT_ACCOUNT_SETTING WAS ON WAS.WT_ACCOUNT_SETTING_ID = AI.WT_ACCOUNT_SETTING_ID
INNER JOIN BIR_ATC BA ON BA.BIR_ATC_ID = WAS.BIR_ATC_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = AI.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND AI.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, AI.DIVISION_ID = IN_DIVISION_ID, AI.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(AI.DATE_RECEIVED) = IN_YEAR
AND MONTH(AI.DATE_RECEIVED) BETWEEN IN_MONTH_FROM AND IN_MONTH_TO

UNION ALL

SELECT AC.AR_CUSTOMER_ID, AC.TIN, IF(AC.BUSINESS_CLASSIFICATION_ID = 2, AC.NAME, '') AS CORPORATE_NAME,
IF(AC.BUSINESS_CLASSIFICATION_ID = 1, CONCAT(AC.LAST_NAME,', ', AC.FIRST_NAME, AC.MIDDLE_NAME), '') AS NAME,
BA.NAME AS ATC_CODE, BA.DESCRIPTION, SUM(ASL.AMOUNT) AS AMOUNT, WAS.VALUE AS TAX_RATE, ART.WT_AMOUNT,
AC.LAST_NAME, AC.FIRST_NAME, AC.MIDDLE_NAME
FROM AR_SERVICE_LINE ASL
INNER JOIN AR_TRANSACTION ART ON ASL.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = ART.CUSTOMER_ID
INNER JOIN WT_ACCOUNT_SETTING WAS ON WAS.WT_ACCOUNT_SETTING_ID = ART.WT_ACCOUNT_SETTING_ID
INNER JOIN BIR_ATC BA ON BA.BIR_ATC_ID = WAS.BIR_ATC_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = ART.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ART.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, ART.DIVISION_ID = IN_DIVISION_ID, ART.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(ART.GL_DATE) = IN_YEAR
AND MONTH(ART.GL_DATE) BETWEEN IN_MONTH_FROM AND IN_MONTH_TO
GROUP BY ART.AR_TRANSACTION_ID

UNION ALL

SELECT AC.AR_CUSTOMER_ID, AC.TIN, IF(AC.BUSINESS_CLASSIFICATION_ID = 2, AC.NAME, '') AS CORPORATE_NAME,
IF(AC.BUSINESS_CLASSIFICATION_ID = 1, CONCAT(AC.LAST_NAME,', ', AC.FIRST_NAME, AC.MIDDLE_NAME), '') AS NAME,
BA.NAME AS ATC_CODE, BA.DESCRIPTION, SUM(AML.AMOUNT) AS AMOUNT, WAS.VALUE AS TAX_RATE, AM.WT_AMOUNT,
AC.LAST_NAME, AC.FIRST_NAME, AC.MIDDLE_NAME
FROM AR_MISCELLANEOUS_LINE AML
INNER JOIN AR_MISCELLANEOUS AM ON AML.AR_MISCELLANEOUS_ID = AM.AR_MISCELLANEOUS_ID
INNER JOIN AR_CUSTOMER AC ON AC.AR_CUSTOMER_ID = AM.AR_CUSTOMER_ID
INNER JOIN WT_ACCOUNT_SETTING WAS ON WAS.WT_ACCOUNT_SETTING_ID = AM.WT_ACCOUNT_SETTING_ID
INNER JOIN BIR_ATC BA ON BA.BIR_ATC_ID = WAS.BIR_ATC_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = AM.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND AM.COMPANY_ID = IN_COMPANY_ID
AND IF(IN_DIVISION_ID != -1, AM.DIVISION_ID = IN_DIVISION_ID, AM.DIVISION_ID != IN_DIVISION_ID)
AND YEAR(AM.MATURITY_DATE) = IN_YEAR
AND MONTH(AM.MATURITY_DATE) BETWEEN IN_MONTH_FROM AND IN_MONTH_TO
GROUP BY AM.AR_MISCELLANEOUS_ID

) AS INNER_TBL GROUP BY AR_CUSTOMER_ID, ATC_CODE
) AS SAWT_TBL WHERE AMOUNT > 0 ORDER BY CORPORATE_NAME, NAME;
END//
