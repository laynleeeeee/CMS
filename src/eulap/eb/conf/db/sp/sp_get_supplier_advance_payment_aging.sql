-- Description: Stored procedure for retrieving data for Supplier Advance Payment Aging.


Delimiter //
DROP PROCEDURE IF EXISTS GET_SUPPLIER_ADVANCE_PAYMENT_AGING;

CREATE PROCEDURE GET_SUPPLIER_ADVANCE_PAYMENT_AGING(IN IN_COMPANY_ID INT, IN_DIVISION_ID INT,IN_SUPPLIER_ID INT, IN IN_SUPPLIER_ACCOUNT_ID INT,
IN IN_BMS_NUMBER VARCHAR(10),IN IN_DATE_TO DATE, IN IN_AGE_BASIS INT, IN IN_STATUS_ID INT, IN IN_LIMIT_FROM INT, IN IN_LIMIT_TO INT)

BEGIN

SELECT COMPANY, DIVISION, DATE, SUPPLIER, SUPPLIER_ACCOUNT, AMOUNT_INITIALLY, REQUESTOR, REFERENCE_NO, BMS_NUMBER, PO_NUMBER,
SUM(AMOUNT) AS AMOUNT, DESCRIPTION,
SUM(1_30_DAYS) AS 1_30_DAYS, SUM(31_60_DAYS) AS 31_60_DAYS, SUM(61_90_DAYS) AS 61_90_DAYS, SUM(91_120_DAYS) AS 91_120_DAYS,
SUM(120_UP) AS 120_UP,CANCELLATION_REMARKS, SUPPLIER_ADVANCE_PAYMENT_ID,DATE_CLEARED FROM (

SELECT COMPANY, DIVISION, DATE, SUPPLIER, SUPPLIER_ACCOUNT, AMOUNT_INITIALLY, REQUESTOR, REFERENCE_NO, BMS_NUMBER, PO_NUMBER AS PO_NUMBER,AMOUNT,
DESCRIPTION, AGE_BASIS, IF(DATEDIFF(IN_DATE_TO, AGE_BASIS) BETWEEN 0 AND 30, SUM(AMOUNT), 0) AS 1_30_DAYS,
IF(DATEDIFF(IN_DATE_TO, AGE_BASIS) BETWEEN 31 AND 60, SUM(AMOUNT), 0) AS 31_60_DAYS,
IF(DATEDIFF(IN_DATE_TO, AGE_BASIS) BETWEEN 61 AND 90, SUM(AMOUNT), 0) AS 61_90_DAYS,
IF(DATEDIFF(IN_DATE_TO, AGE_BASIS) BETWEEN 91 AND 120, SUM(AMOUNT), 0) AS 91_120_DAYS,
IF(DATEDIFF(IN_DATE_TO, AGE_BASIS) >= 121, SUM(AMOUNT), 0) AS 120_UP,
CANCELLATION_REMARKS, SUPPLIER_ADVANCE_PAYMENT_ID, DATE_CLEARED FROM (

SELECT COMPANY, DIVISION, DATE, SUPPLIER, SUPPLIER_ACCOUNT, AMOUNT_INITIALLY, REQUESTOR, REFERENCE_NO, BMS_NUMBER, PO_NUMBER,
(AMOUNT_INITIALLY - SUM(AMOUNT)) AS AMOUNT, GROUP_CONCAT(DESCRIPTION SEPARATOR ', ') AS DESCRIPTION, AGE_BASIS,
GROUP_CONCAT(CANCELLATION_REMARKS) AS CANCELLATION_REMARKS, SUPPLIER_ADVANCE_PAYMENT_ID, DATE_CLEARED FROM (

SELECT SAP.SUPPLIER_ADVANCE_PAYMENT_ID, C.COMPANY_ID, C.NAME AS COMPANY, D.DIVISION_ID, D.NAME AS DIVISION,
S.SUPPLIER_ID, S.NAME AS SUPPLIER, SA.SUPPLIER_ACCOUNT_ID, SA.NAME AS SUPPLIER_ACCOUNT, SAP.BMS_NUMBER,
SAP.DATE, SAP.GL_DATE, SAP.DUE_DATE, AP.DATE_CLEARED, SAP.REQUESTOR, CONCAT(SAP.SEQUENCE_NO, '') AS REFERENCE_NO, PO.PO_NUMBER,
(CASE WHEN IN_AGE_BASIS = 1 THEN SAP.DUE_DATE WHEN IN_AGE_BASIS = 2 THEN SAP.DATE
	WHEN IN_AGE_BASIS = 3 THEN SAP.GL_DATE ELSE SAP.DATE END) AS AGE_BASIS,
FW_AP.CURRENT_STATUS_ID, FS_AP.DESCRIPTION, APL.PAID_AMOUNT AS AMOUNT, IF(FW.CURRENT_STATUS_ID = 4, 0, SAP.AMOUNT) AS AMOUNT_INITIALLY,
IF(FW_AP.CURRENT_STATUS_ID = 4, (SELECT FWL.COMMENT FROM FORM_WORKFLOW_LOG FWL
	WHERE FWL.FORM_WORKFLOW_ID = FW_AP.FORM_WORKFLOW_ID AND FWL.FORM_STATUS_ID = 4), '') AS CANCELLATION_REMARKS
FROM SUPPLIER_ADVANCE_PAYMENT SAP
INNER JOIN R_PURCHASE_ORDER PO ON PO.R_PURCHASE_ORDER_ID = SAP.R_PURCHASE_ORDER_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = SAP.COMPANY_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = SAP.DIVISION_ID
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = SAP.SUPPLIER_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = SAP.SUPPLIER_ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID = SAP.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID = FW.CURRENT_STATUS_ID
INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.FROM_OBJECT_ID = SAP.EB_OBJECT_ID
INNER JOIN AP_PAYMENT_LINE APL ON APL.EB_OBJECT_ID = OTO.TO_OBJECT_ID
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = APL.AP_PAYMENT_ID
INNER JOIN FORM_WORKFLOW FW_AP ON FW_AP.FORM_WORKFLOW_ID = AP.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS FS_AP ON FS_AP.FORM_STATUS_ID = FW_AP.CURRENT_STATUS_ID
WHERE FW_AP.CURRENT_STATUS_ID NOT IN (1, 4, 32)
AND SAP.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STATUS_ID != -1 THEN FW_AP.CURRENT_STATUS_ID = IN_STATUS_ID ELSE FW_AP.CURRENT_STATUS_ID != IN_STATUS_ID END)
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SAP.DIVISION_ID = IN_DIVISION_ID ELSE SAP.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_SUPPLIER_ID != -1 THEN SAP.SUPPLIER_ID = IN_SUPPLIER_ID ELSE SAP.SUPPLIER_ID != IN_SUPPLIER_ID END)
AND (CASE WHEN IN_SUPPLIER_ACCOUNT_ID != -1 THEN SAP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID ELSE SAP.SUPPLIER_ACCOUNT_ID != IN_SUPPLIER_ACCOUNT_ID END)
AND (CASE WHEN IN_BMS_NUMBER != -1 THEN SAP.BMS_NUMBER LIKE CONCAT('%',IN_BMS_NUMBER,'%') ELSE SAP.BMS_NUMBER != IN_BMS_NUMBER END)

UNION ALL

SELECT SAP.SUPPLIER_ADVANCE_PAYMENT_ID, C.COMPANY_ID, C.NAME AS COMPANY, D.DIVISION_ID, D.NAME AS DIVISION,
S.SUPPLIER_ID, S.NAME AS SUPPLIER, SA.SUPPLIER_ACCOUNT_ID, SA.NAME AS SUPPLIER_ACCOUNT, SAP.BMS_NUMBER,
SAP.DATE, SAP.GL_DATE, SAP.DUE_DATE, NULL AS DATE_CLEARED, SAP.REQUESTOR, CONCAT(SAP.SEQUENCE_NO, '') AS REFERENCE_NO, PO.PO_NUMBER,
(CASE WHEN IN_AGE_BASIS = 1 THEN SAP.DUE_DATE WHEN IN_AGE_BASIS = 2 THEN SAP.DATE
	WHEN IN_AGE_BASIS = 3 THEN SAP.GL_DATE ELSE SAP.DATE END) AS AGE_BASIS,
'' AS STATUS, '' AS DESCRIPTION, 0 AS AMOUNT, IF(FW.CURRENT_STATUS_ID = 4, 0, SAP.AMOUNT) AS AMOUNT_INITIALLY,
IF(FW.CURRENT_STATUS_ID = 4, (SELECT FWL.COMMENT FROM FORM_WORKFLOW_LOG FWL
	WHERE FWL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID AND FWL.FORM_STATUS_ID = 4), '') AS CANCELLATION_REMARKS
FROM SUPPLIER_ADVANCE_PAYMENT SAP
INNER JOIN R_PURCHASE_ORDER PO ON PO.R_PURCHASE_ORDER_ID = SAP.R_PURCHASE_ORDER_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = SAP.COMPANY_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = SAP.DIVISION_ID
INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = SAP.SUPPLIER_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = SAP.SUPPLIER_ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID=SAP.FORM_WORKFLOW_ID
INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID=FW.CURRENT_STATUS_ID
WHERE SAP.EB_OBJECT_ID NOT IN (
	SELECT OTO.FROM_OBJECT_ID FROM AP_PAYMENT_LINE APL
	INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = APL.EB_OBJECT_ID
	INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = APL.AP_PAYMENT_ID
	INNER JOIN FORM_WORKFLOW FW_AP ON FW_AP.FORM_WORKFLOW_ID = AP.FORM_WORKFLOW_ID
	WHERE FW_AP.CURRENT_STATUS_ID != 4)
AND C.COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STATUS_ID != -1 THEN FW.CURRENT_STATUS_ID = IN_STATUS_ID ELSE FW.CURRENT_STATUS_ID != IN_STATUS_ID END)
AND (CASE WHEN IN_DIVISION_ID != -1 THEN SAP.DIVISION_ID = IN_DIVISION_ID ELSE SAP.DIVISION_ID != IN_DIVISION_ID END)
AND (CASE WHEN IN_SUPPLIER_ID != -1 THEN SAP.SUPPLIER_ID = IN_SUPPLIER_ID ELSE SAP.SUPPLIER_ID != IN_SUPPLIER_ID END)
AND (CASE WHEN IN_SUPPLIER_ACCOUNT_ID != -1 THEN SAP.SUPPLIER_ACCOUNT_ID = IN_SUPPLIER_ACCOUNT_ID ELSE SAP.SUPPLIER_ACCOUNT_ID != IN_SUPPLIER_ACCOUNT_ID END)
AND (CASE WHEN IN_BMS_NUMBER != -1 THEN SAP.BMS_NUMBER LIKE CONCAT('%',IN_BMS_NUMBER,'%') ELSE SAP.BMS_NUMBER != IN_BMS_NUMBER END)

) AS AMOUNT_TBL GROUP BY SUPPLIER_ADVANCE_PAYMENT_ID
) AS SUPPLIER_AGING_TBL GROUP BY SUPPLIER_ADVANCE_PAYMENT_ID
) AS TBL
WHERE IN_DATE_TO >= AGE_BASIS
GROUP BY SUPPLIER_ADVANCE_PAYMENT_ID
ORDER BY DATE;
END //