-- Description: Stored proceedure that will get the entries all accounts. 

Delimiter //
DROP procedure IF EXISTS GET_JOURNAL_ENTRIES_REGISTER;//
CREATE procedure GET_JOURNAL_ENTRIES_REGISTER (IN IN_COMPANY_ID INT, 
	 IN IN_FROM_GL_DATE DATE, IN IN_TO_GL_DATE DATE, IN IS_COMPLETE_1 INT, IN IS_COMPLETE_2 INT)
BEGIN
	
-- General Ledger DEBIT and CREDIT

SELECT TBL.GL_DATE, TBL.SOURCE, TBL.REFERENCE_NUMBER, TBL.ACCOUNT_NO, TBL.ACCOUNT_DESC,
  TBL.DESCRIPTION as DESCRIPTION, TBL.DEBIT, TBL.CREDIT, STATUS FROM (
  
SELECT GL.GL_DATE, 'GENERAL LEDGER' as SOURCE, CONCAT('JV', GL.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	GLE.DESCRIPTION, GLE.AMOUNT as DEBIT, 0 as CREDIT, 
	FW.IS_COMPLETE AS STATUS
FROM GL_ENTRY GLE 
INNER JOIN GENERAL_LEDGER GL ON GL.GENERAL_LEDGER_ID = GLE.GENERAL_LEDGER_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = GLE.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID 
INNER JOIN FORM_WORKFLOW FW ON GL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AC.COMPANY_ID = IN_COMPANY_ID
AND IS_DEBIT = 1
AND GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
  
UNION ALL

SELECT GL.GL_DATE, 'GENERAL LEDGER' as SOURCE, CONCAT('JV', GL.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	GLE.DESCRIPTION, 0 as DEBIT, GLE.AMOUNT as CREDIT, 
	FW.IS_COMPLETE AS STATUS
FROM GL_ENTRY GLE 
INNER JOIN GENERAL_LEDGER GL ON GL.GENERAL_LEDGER_ID = GLE.GENERAL_LEDGER_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = GLE.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID 
INNER JOIN FORM_WORKFLOW FW ON GL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AC.COMPANY_ID = IN_COMPANY_ID
AND IS_DEBIT = 0
AND GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- AP Invoice DEBIT and CREDIT

SELECT AI.GL_DATE, 'AP INVOICE' as SOURCE, AI.INVOICE_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	AI.DESCRIPTION, 0 as DEBIT, AI.AMOUNT as CREDIT, 
	FW.IS_COMPLETE AS STATUS
FROM AP_INVOICE AI 
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AI.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

SELECT  AI.GL_DATE, 'AP INVOICE' as SOURCE, AI.INVOICE_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	AI.DESCRIPTION, -AI.AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AP_INVOICE AI 
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID 
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AI.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- AP LINE Debit and CREDIT

SELECT  AI.GL_DATE, 'AP INVOICE' as SOURCE, AI.INVOICE_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	AL.DESCRIPTION, AL.AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AP_LINE AL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = AL.AP_INVOICE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = AL.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AL.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL 

SELECT  AI.GL_DATE, 'AP INVOICE' as SOURCE, AI.INVOICE_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	AL.DESCRIPTION, 0 AS DEBIT, -AL.AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AP_LINE AL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = AL.AP_INVOICE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = AL.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AL.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- AP Payment
-- Credit
SELECT AP.CHECK_DATE as GL_DATE,  'AP PAYMENT' as SOURCE, AP.CHECK_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	API.INVOICE_NUMBER as DESCRIPTION, 0 AS DEBIT, AI.PAID_AMOUNT as CREDIT,
	1 AS STATUS
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID=AP.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AP.AMOUNT != 0
AND AI.PAID_AMOUNT > 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AP.CHECK_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

SELECT AP.CHECK_DATE as GL_DATE,  'AP PAYMENT' as SOURCE, AP.CHECK_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	API.INVOICE_NUMBER as DESCRIPTION, -AI.PAID_AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID=AP.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AP.AMOUNT != 0
AND AI.PAID_AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AP.CHECK_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL
-- Credit - AP PAYMENT
SELECT AP.CHECK_DATE as GL_DATE,  'AP PAYMENT' as SOURCE, AP.CHECK_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,  
	API.INVOICE_NUMBER as DESCRIPTION, 0 AS DEBIT, -AI.PAID_AMOUNT as CREDIT,
	1 AS STATUS
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AI.PAID_AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AP.CHECK_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Debit
SELECT AP.CHECK_DATE as GL_DATE,  'AP PAYMENT' as SOURCE, AP.CHECK_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,  
	API.INVOICE_NUMBER as DESCRIPTION, AI.PAID_AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AI.PAID_AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AP.CHECK_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- AR MISCELLANEOUS
-- Debit debit account combination
SELECT AM.MATURITY_DATE as GL_DATE,  'AR MISCELLANEOUS' as SOURCE, AM.RECEIPT_NUMBER AS REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AM.DESCRIPTION AS DESCRIPTION, AM.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_MISCELLANEOUS AM
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AM.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.DEBIT_ACCOUNT_COMBINATION_ID IS NOT NULL
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AM.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 
-- Debit, bank account
UNION ALL 
SELECT AM.MATURITY_DATE as GL_DATE,  'AR MISCELLANEOUS' as SOURCE, AM.RECEIPT_NUMBER AS REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AM.DESCRIPTION AS DESCRIPTION, AM.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_MISCELLANEOUS AM
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AM.RECEIPT_METHOD_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.BANK_ACCOUNT_ID IS NOT NULL
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AM.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- Debit
SELECT AM.MATURITY_DATE as GL_DATE,  'AR MISCELLANEOUS' as SOURCE, AM.RECEIPT_NUMBER AS REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AM.DESCRIPTION AS DESCRIPTION, -AML.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_MISCELLANEOUS_LINE AML
INNER JOIN AR_MISCELLANEOUS AM ON AM.AR_MISCELLANEOUS_ID = AML.AR_MISCELLANEOUS_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AML.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AML.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AM.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- Credit
SELECT AM.MATURITY_DATE as GL_DATE,  'AR MISCELLANEOUS' as SOURCE, AM.RECEIPT_NUMBER AS REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AM.DESCRIPTION AS DESCRIPTION, 0 AS DEBIT, AML.AMOUNT as CREDIT,
	1 AS STATUS
FROM AR_MISCELLANEOUS_LINE AML
INNER JOIN AR_MISCELLANEOUS AM ON AM.AR_MISCELLANEOUS_ID = AML.AR_MISCELLANEOUS_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AML.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AML.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AM.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL
-- AR Transaction
-- Debit
SELECT AT.GL_DATE,  'AR TRANSACTION' as SOURCE, AT.TRANSACTION_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.DESCRIPTION, AT.AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_TRANSACTION AT
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AT.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AT.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AT.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- Credit
SELECT AT.GL_DATE, 'AR TRANSACTION' as SOURCE, AT.TRANSACTION_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.DESCRIPTION, 0 AS DEBIT, -AT.AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_TRANSACTION AT
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AT.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AT.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AT.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- AR LINE
-- Credit
SELECT AT.GL_DATE, 'AR TRANSACTION' as SOURCE, AT.TRANSACTION_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.DESCRIPTION, 0 AS DEBIT, AL.AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID=AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AL.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AT.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- Debit
SELECT AT.GL_DATE, 'AR TRANSACTION' as SOURCE, AT.TRANSACTION_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.DESCRIPTION, -AL.AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID=AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE (FW.IS_COMPLETE = IS_COMPLETE_1 OR FW.IS_COMPLETE = IS_COMPLETE_2)
AND FW.CURRENT_STATUS_ID != 4
AND AL.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AT.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL
-- AR Receipt - not cancelled and  Maturity Date

-- Debit
-- RECEIPT_ID
-- RECEIPT_METHOD
-- Either from DEBIT_ACCOUNT_COMBINATION_ID or BANK_ACCOUNT_ID
SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	'' as DESCRIPTION, AR.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.DEBIT_ACCOUNT_COMBINATION_ID IS NOT NULL
AND AR.AMOUNT != 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
-- Debit Bank account
UNION ALL
SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	'' AS DESCRIPTION, AR.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.AMOUNT != 0
AND RM.BANK_ACCOUNT_ID IS NOT NULL
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- Credit
-- RECEIPT_ID
-- RECEIPT_METHOD
-- CREDIT_ACCOUNT_COMBINATION_ID
SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	'' AS DESCRIPTION, 0 AS DEBIT, AR.AMOUNT as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.AMOUNT != 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL
-- AR Transaction
-- if amount is positive
-- Debit
-- AR_RECEIPT_TRANSACTION.AR_RECEIPT_ID->AR_RECEIPT.RECEIPT_ID->RECEIPT_METHOD.CREDIT_ACCOUNT_COMBINATION_ID
SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.TRANSACTION_NUMBER AS DESCRIPTION, ART.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL

SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.TRANSACTION_NUMBER AS DESCRIPTION, 0 AS DEBIT, -ART.AMOUNT as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL

-- Credit
-- AR_RECEIPT_TRANSACTION.AR_RECEIPT_ID->AR_RECEIPT.AR_CUSTOMER_ACCOUNT_ID->AR_CUSTOMER_ACCOUNT.DEFAULT_DEBIT_AC_ID
-- if negative, reverse the debit and credit.
SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.TRANSACTION_NUMBER AS DESCRIPTION, 0 AS DEBIT, ART.AMOUNT as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT >= 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
UNION ALL

SELECT AR.MATURITY_DATE as GL_DATE, 'ACCOUNT COLLECTION' as SOURCE, AR.RECEIPT_NUMBER as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	AT.TRANSACTION_NUMBER AS DESCRIPTION, -ART.AMOUNT AS DEBIT, 0 as CREDIT,
	1 AS STATUS
FROM AR_RECEIPT_TRANSACTION ART 
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT < 0
AND AC.COMPANY_ID = IN_COMPANY_ID
AND AR.MATURITY_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Cost Account
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION, 
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Inventory Account
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION, 
 	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
 	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Sales Account
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION,
	0 AS DEBIT, QUANTITY * SRP as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Sales Discount Account
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION,
	0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Receipt Method - Default Debit - Sale Items
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION,
	CSI.AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Receipt Method - Default Debit - Sale Items
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION,
	AL.AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Receipt Method - Bank Account
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION, 
	AMOUNT AS DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales - Other Charges
SELECT CS.RECEIPT_DATE as GL_DATE, 'CASH SALES' as SOURCE, CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CS.SALE_INVOICE_NO AS DESCRIPTION, 
	0 AS DEBIT, AL.AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN COMPANY C ON C.COMPANY_ID = AC.COMPANY_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CS.COMPANY_ID = IN_COMPANY_ID
AND CS.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL 

-- Account Sales - Cost Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL 

-- Account Sales - Inventory Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales - Sales Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	0 as DEBIT, QUANTITY * SRP as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales - Sales Discount Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales - Customer Account Setup - Sale Items
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	ASI.AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales - Customer Account Setup - Ar Lines
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	AL.AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales - Other charges
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES' as SOURCE, CONCAT('AS-', SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, ART.DESCRIPTION,
	0 as DEBIT, AL.AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Receiving Report - Debit
SELECT AI.GL_DATE, 'RECEIVING REPORT' as SOURCE, CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 
	COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND RR.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 
AND AI.INVOICE_TYPE_ID = 5

UNION ALL 

-- Receiving Report - Credit - Invoice Number
SELECT AI.GL_DATE, 'RECEIVING REPORT' as SOURCE, CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC,
	COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RR.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND RR.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 
AND AI.INVOICE_TYPE_ID = 5

UNION ALL

-- Return To Supplier - Credit
SELECT  AI.GL_DATE, 'RETURN TO SUPPLIER' as SOURCE, CONCAT('RTS-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,  
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 'RETURN TO SUPPLIER' as DESCRIPTION,
	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON RTS.AP_INVOICE_ID = RTSI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RTSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND RTS.COMPANY_ID = IN_COMPANY_ID
AND AI.GL_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 
AND AI.INVOICE_TYPE_ID = 6

UNION ALL

-- Return To Supplier - Debit
SELECT  AI.GL_DATE, 'RETURN TO SUPPLIER' as SOURCE, CONCAT('RTS-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,  
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, 'RETURN TO SUPPLIER' as DESCRIPTION,
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON RTS.AP_INVOICE_ID = RTSI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND RTS.COMPANY_ID = IN_COMPANY_ID
AND AI.INVOICE_TYPE_ID = 6

UNION ALL

-- Cash Sales Return - Cost Account - Return Items
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Cash Sales Return - Inventory Account
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION,
	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Cash Sales Return - Sales Return Account
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION,
	0 as DEBIT, (QUANTITY * SRP) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Cash Return Sales - Sales Discount Account
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION,
	0 AS DEBIT, COALESCE(DISCOUNT, 0) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Cash Sales Return - Receipt Method - Default Debit
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION,
	AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE

UNION ALL

-- Cash Sales Return - Receipt Method - Bank Account
SELECT CSR.DATE as GL_DATE, 'CASH SALES RETURN' as SOURCE,  CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION,
	AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CSR.COMPANY_ID = IN_COMPANY_ID
AND CSR.DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Account Sales Return - Cost Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES RETURN' as SOURCE, CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 5
AND ASR.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales Return - Inventory Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES RETURN' as SOURCE, CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
	0 as DEBIT, (COALESCE(UNIT_COST, 0) * QUANTITY) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 5
AND ASR.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales Return - Sale Return Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES RETURN' as SOURCE, CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
	0 as DEBIT, (QUANTITY * SRP) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 5
AND ASR.AR_TRANSACTION_TYPE_ID = 4

UNION ALL

-- Account Sales Return - Sales Discount Account
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES RETURN' as SOURCE, CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
	0 as DEBIT, COALESCE(DISCOUNT, 0) as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = IN_COMPANY_ID
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 5

UNION ALL

-- Account Sales Return - Customer Account Setup
SELECT ART.TRANSACTION_DATE AS GL_DATE, 'ACCOUNT SALES RETURN' as SOURCE, CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
	ASI.AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND ART.COMPANY_ID = IN_COMPANY_ID
AND ART.TRANSACTION_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND ART.AR_TRANSACTION_TYPE_ID = 5

UNION ALL 

-- Customer Advance Payment - Receipt Method Debit - Default Debit
SELECT CAP.RECEIPT_DATE as GL_DATE, 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
	AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CAP.COMPANY_ID = IN_COMPANY_ID
AND CAP.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL 

-- Customer Advance Payment - Receipt Method Debit - Bank Account
SELECT CAP.RECEIPT_DATE as GL_DATE, 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
	AMOUNT as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CAP.COMPANY_ID = IN_COMPANY_ID
AND CAP.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL 

-- Customer Advance Payment - Receipt Method Credit
SELECT CAP.RECEIPT_DATE as GL_DATE, 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
	0 as DEBIT, AMOUNT as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND CAP.COMPANY_ID = IN_COMPANY_ID
AND CAP.RECEIPT_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 

UNION ALL

-- Stock Adjustment In - Receipt Method Debit
SELECT SA.SA_DATE as GL_DATE, 'STOCK ADJUSTMENT IN' as SOURCE, SA.SA_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, SA.REMARKS AS DESCRIPTION,  
	COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND SA.COMPANY_ID = IN_COMPANY_ID
AND SA.SA_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE 
AND QUANTITY > 0

UNION ALL

-- Stock Adjustment In - Receipt Method Credit
SELECT SA.SA_DATE as GL_DATE, 'STOCK ADJUSTMENT IN' as SOURCE, SA.SA_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, SA.REMARKS AS DESCRIPTION,  
	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND SA.COMPANY_ID = IN_COMPANY_ID
AND SA.SA_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND QUANTITY > 0

UNION ALL 

-- Stock Adjustment Out - Receipt Method Debit
SELECT SA.SA_DATE as GL_DATE, 'STOCK ADJUSTMENT OUT' as SOURCE, SA.SA_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, SA.REMARKS AS DESCRIPTION,  
	COALESCE(UNIT_COST, 0) * -QUANTITY as DEBIT, 0 as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND SA.COMPANY_ID = IN_COMPANY_ID
AND SA.SA_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND QUANTITY < 0

UNION ALL

-- Stock Adjustment Out - Receipt Method Credit
SELECT SA.SA_DATE as GL_DATE, 'STOCK ADJUSTMENT OUT' as SOURCE, SA.SA_NUMBER as REFERENCE_NUMBER, 
	ACCT.NUMBER AS ACCOUNT_NO, ACCT.DESCRIPTION AS ACCOUNT_DESC, SA.REMARKS AS DESCRIPTION,
	0 as DEBIT, COALESCE(UNIT_COST, 0) * -QUANTITY as CREDIT,
	FW.IS_COMPLETE AS STATUS
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT
INNER JOIN ACCOUNT ACCT ON ACCT.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.IS_COMPLETE = 1
AND SA.COMPANY_ID = IN_COMPANY_ID
AND SA.SA_DATE BETWEEN IN_FROM_GL_DATE and IN_TO_GL_DATE
AND QUANTITY < 0


) as TBL ORDER BY TBL.GL_DATE, TBL.REFERENCE_NUMBER;
END//
