-- Description: Stored procedure that will get the reordering point report data.


Delimiter //
DROP PROCEDURE IF EXISTS GET_REORDERING_POINT;
CREATE PROCEDURE GET_REORDERING_POINT(IN IN_COMPANY_ID int, IN IN_ITEM_CATEGORY_ID int, IN IN_WAREHOUSE_ID int, IN AS_OF_DATE date,
	IN IN_DIVISION_ID int, IN IN_STATUS_ID int, IN IN_LIMIT_FROM INT, IN IN_LIMIT_TO INT)
BEGIN
SELECT ID, WAREHOUSE_ID, STOCK_CODE, DESCRIPTION, DIVISION, WAREHOUSE, UOM, REORDERING_POINT, SUM(QUANTITY) as EXISTING_STOCKS FROM (

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, RRI.QUANTITY - COALESCE((SELECT sum(RTSI.QUANTITY) from R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN AP_INVOICE API ON RTSI.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON API.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4 
AND RRI.R_RECEIVING_REPORT_ITEM_ID = RTSI.R_RECEIVING_REPORT_ITEM_ID
AND API.INVOICE_TYPE_ID IN (31,32,33,34,35,36)), 0) 
as QUANTITY,
'RR' as FORM FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN AP_INVOICE API ON RRI.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT RR ON API.AP_INVOICE_ID = RR.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RRI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RR.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON API.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE API.GL_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RR.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RR.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RR.COMPANY_ID != IN_COMPANY_ID
	ELSE RR.COMPANY_ID = IN_COMPANY_ID END)
AND FW.IS_COMPLETE = 1

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SI.QUANTITY - COALESCE((SELECT SUM(RTS_SI.QUANTITY) FROM SERIAL_ITEM RTS_SI
INNER JOIN OBJECT_TO_OBJECT RTS_OTO ON RTS_OTO.TO_OBJECT_ID = RTS_SI.EB_OBJECT_ID
INNER JOIN AP_INVOICE RTS_API ON RTS_API.EB_OBJECT_ID = RTS_OTO.FROM_OBJECT_ID
INNER JOIN FORM_WORKFLOW RTS_FW ON RTS_FW.FORM_WORKFLOW_ID = RTS_API.FORM_WORKFLOW_ID
WHERE RTS_FW.CURRENT_STATUS_ID != 4
AND RTS_SI.ACTIVE = 1
AND RTS_API.GL_DATE <= NOW()
AND RTS_API.INVOICE_TYPE_ID IN (31,32,33,34,35,36)
AND RTS_OTO.OR_TYPE_ID = 105
AND RTS_SI.ITEM_ID = SI.ITEM_ID),0)
as QUANTITY,
'RR-SI' as FORM FROM SERIAL_ITEM SI 
INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
INNER JOIN AP_INVOICE API ON API.EB_OBJECT_ID = OTO.FROM_OBJECT_ID
INNER JOIN R_RECEIVING_REPORT RR ON API.AP_INVOICE_ID = RR.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RR.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON API.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE API.GL_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RR.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RR.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RR.COMPANY_ID != IN_COMPANY_ID
	ELSE RR.COMPANY_ID = IN_COMPANY_ID END)
AND SI.ACTIVE = 1
AND FW.IS_COMPLETE = 1

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SI.QUANTITY, 'SA-IN' FROM SERIAL_ITEM SI 
INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID 
INNER JOIN STOCK_ADJUSTMENT SA ON SA.EB_OBJECT_ID = OTO.FROM_OBJECT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = SI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = SA.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE SA.SA_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN SA.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE SA.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN SA.COMPANY_ID != IN_COMPANY_ID
	ELSE SA.COMPANY_ID = IN_COMPANY_ID END)
AND OTO.OR_TYPE_ID = 56
AND SI.ACTIVE = 1
AND FW.IS_COMPLETE = 1

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SI.QUANTITY, 'SA-OUT' FROM SERIAL_ITEM SI 
INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID 
INNER JOIN STOCK_ADJUSTMENT SA ON SA.EB_OBJECT_ID = OTO.FROM_OBJECT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = SI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = SA.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE SA.SA_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN SA.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE SA.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN SA.COMPANY_ID != IN_COMPANY_ID
	ELSE SA.COMPANY_ID = IN_COMPANY_ID END)
AND OTO.OR_TYPE_ID = 63
AND SI.ACTIVE = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, -RTSI.QUANTITY,
'RTS-EB' as FORM FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN AP_INVOICE API ON RTSI.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON API.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON API.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = RTSI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RTS.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE API.GL_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND RTS.WAREHOUSE_ID = IN_WAREHOUSE_ID
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RTS.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RTS.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RTS.COMPANY_ID != IN_COMPANY_ID
	ELSE RTS.COMPANY_ID = IN_COMPANY_ID END)
AND FW.CURRENT_STATUS_ID != 4
AND API.INVOICE_TYPE_ID = 7
UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, RPI.REPACKED_QUANTITY, 'RP To' FROM REPACKING_ITEM RPI
INNER JOIN REPACKING RP ON RP.REPACKING_ID = RPI.REPACKING_ID
INNER JOIN FORM_WORKFLOW FW ON RP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = RPI.TO_ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RP.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE RP.R_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RP.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RP.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RP.COMPANY_ID != IN_COMPANY_ID
	ELSE RP.COMPANY_ID = IN_COMPANY_ID END)
AND RP.REPACKING_TYPE_ID = 1
AND FW.IS_COMPLETE = 1

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, -RPI.QUANTITY, 'RP From' FROM REPACKING_ITEM RPI
INNER JOIN REPACKING RP ON RP.REPACKING_ID = RPI.REPACKING_ID
INNER JOIN FORM_WORKFLOW FW ON RP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = RPI.FROM_ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RP.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE RP.R_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RP.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RP.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RP.COMPANY_ID != IN_COMPANY_ID
	ELSE RP.COMPANY_ID = IN_COMPANY_ID END)
AND RP.REPACKING_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SAI.QUANTITY, 'SA' FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SAI.STOCK_ADJUSTMENT_ID = SA.STOCK_ADJUSTMENT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = SA.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE SA.SA_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN SA.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE SA.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN SA.COMPANY_ID != IN_COMPANY_ID
	ELSE SA.COMPANY_ID = IN_COMPANY_ID END)
AND SAI.QUANTITY > 0
AND FW.IS_COMPLETE = 1
UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SAI.QUANTITY, 'SA' FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SAI.STOCK_ADJUSTMENT_ID = SA.STOCK_ADJUSTMENT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = SA.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE SA.SA_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN SA.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE SA.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN SA.COMPANY_ID != IN_COMPANY_ID
	ELSE SA.COMPANY_ID = IN_COMPANY_ID END)
AND SAI.QUANTITY < 0
AND FW.CURRENT_STATUS_ID != 4
UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, -DRI.QUANTITY, 'DR' 
FROM DELIVERY_RECEIPT_ITEM DRI
INNER JOIN DELIVERY_RECEIPT DR ON DR.DELIVERY_RECEIPT_ID = DRI.DELIVERY_RECEIPT_ID
INNER JOIN FORM_WORKFLOW FW ON DR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = DRI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = DRI.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE DR.DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN DRI.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE DRI.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN DR.COMPANY_ID != IN_COMPANY_ID
	ELSE DR.COMPANY_ID = IN_COMPANY_ID END)
AND DR.DELIVERY_RECEIPT_TYPE_ID IN (5,6,7,8,9,10)
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
-UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, SI.QUANTITY, 'DR' 
FROM SERIAL_ITEM SI
INNER JOIN OBJECT_TO_OBJECT OTO ON OTO.TO_OBJECT_ID = SI.EB_OBJECT_ID
INNER JOIN DELIVERY_RECEIPT DR ON DR.EB_OBJECT_ID = OTO.FROM_OBJECT_ID
INNER JOIN FORM_WORKFLOW FW ON DR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = SI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = SI.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE SI.ACTIVE = 1
AND OTO.OR_TYPE_ID = 12004
AND DR.DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN SI.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE SI.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN DR.COMPANY_ID != IN_COMPANY_ID
	ELSE DR.COMPANY_ID = IN_COMPANY_ID END)
AND DR.DELIVERY_RECEIPT_TYPE_ID IN (5,6,7,8,9,10)
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, -RTSI.QUANTITY, 'RTS-NSB' as FORM FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN AP_INVOICE API ON RTSI.AP_INVOICE_ID = API.AP_INVOICE_ID
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON API.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON API.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
INNER JOIN ITEM I ON I.ITEM_ID = RTSI.ITEM_ID
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
INNER JOIN WAREHOUSE W ON W.WAREHOUSE_ID = RTS.WAREHOUSE_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE API.GL_DATE <= AS_OF_DATE
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND RTS.WAREHOUSE_ID = IN_WAREHOUSE_ID
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN RTS.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE RTS.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
AND (CASE WHEN IN_COMPANY_ID = -1 THEN RTS.COMPANY_ID != IN_COMPANY_ID
	ELSE RTS.COMPANY_ID = IN_COMPANY_ID END)
AND FW.CURRENT_STATUS_ID != 4
AND API.INVOICE_TYPE_ID BETWEEN 31 AND 36

UNION ALL

-- GET ALL ITEMS AND ASSIGN EACH WITH A WAREHOUSE
-- THIS IS TO ADD THE ITEMS WITHOUT STOCKS IN THE REPORT DATA
SELECT I.ITEM_ID AS ID, W.WAREHOUSE_ID, I.STOCK_CODE AS STOCK_CODE, I.DESCRIPTION AS DESCRIPTION, D.NAME AS DIVISION, W.NAME AS WAREHOUSE,
UOM.NAME AS UOM, I.REORDERING_POINT AS REORDERING_POINT, 0 AS QUANTITY, ''
FROM ITEM I
INNER JOIN UNIT_MEASUREMENT UOM ON UOM.UNITOFMEASUREMENT_ID = I.UNIT_MEASUREMENT_ID
CROSS JOIN WAREHOUSE W
INNER JOIN DIVISION D ON D.DIVISION_ID = W.DIVISION_ID
WHERE IN_COMPANY_ID = IN_COMPANY_ID
AND (CASE WHEN IN_STATUS_ID = -1 THEN IN_STATUS_ID = IN_STATUS_ID
	ELSE I.ACTIVE = IN_STATUS_ID END)
AND (CASE WHEN IN_ITEM_CATEGORY_ID IS NULL THEN I.ITEM_CATEGORY_ID IS NOT NULL
	ELSE I.ITEM_CATEGORY_ID = IN_ITEM_CATEGORY_ID END)
AND (CASE WHEN IN_DIVISION_ID = -1 THEN D.DIVISION_ID != IN_DIVISION_ID
	ELSE D.DIVISION_ID = IN_DIVISION_ID END)
AND (CASE WHEN IN_WAREHOUSE_ID = -1 THEN W.WAREHOUSE_ID != IN_WAREHOUSE_ID
	ELSE W.WAREHOUSE_ID = IN_WAREHOUSE_ID END)
) as EXISTING_STOCKS GROUP BY ID, WAREHOUSE_ID ORDER BY STOCK_CODE, DESCRIPTION, WAREHOUSE;
END //