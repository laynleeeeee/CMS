-- Description View for all of accounting transaction. 

Delimiter //
DROP VIEW IF EXISTS V_JOURNAL_ENTRY;

CREATE VIEW V_JOURNAL_ENTRY AS 
SELECT 'GENERAL LEDGER' as SOURCE, GL.GENERAL_LEDGER_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, GL.GL_DATE,
CONCAT('JV', GL.SEQUENCE_NO) as REFERENCE_NUMBER, GLE.DESCRIPTION, GLE.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM GL_ENTRY GLE 
INNER JOIN GENERAL_LEDGER GL ON GL.GENERAL_LEDGER_ID = GLE.GENERAL_LEDGER_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = GLE.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON GL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IS_DEBIT = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

SELECT 'GENERAL LEDGER' as SOURCE, GL.GENERAL_LEDGER_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, GL.GL_DATE, 
CONCAT('JV', GL.SEQUENCE_NO) as REFERENCE_NUMBER, GLE.DESCRIPTION, 0 as DEBIT, GLE.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM GL_ENTRY GLE
INNER JOIN GENERAL_LEDGER GL ON GL.GENERAL_LEDGER_ID = GLE.GENERAL_LEDGER_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = GLE.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON GL.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IS_DEBIT = 0
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- AP Invoice DEBIT and CREDIT
SELECT 'AP INVOICE' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
AI.INVOICE_NUMBER as REFERENCE_NUMBER, AI.DESCRIPTION, 0 as DEBIT, AI.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE AI 
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AI.AMOUNT >= 0
AND AI.INVOICE_TYPE_ID != 5 AND AI.INVOICE_TYPE_ID != 6 AND AI.INVOICE_TYPE_ID != 7 AND AI.INVOICE_TYPE_ID != 8
AND AC.COMPANY_ID = SA.COMPANY_ID 
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

SELECT 'AP INVOICE' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE, 
AI.INVOICE_NUMBER as REFERENCE_NUMBER, AI.DESCRIPTION, -AI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE AI 
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AI.AMOUNT < 0
AND AI.INVOICE_TYPE_ID != 5 AND AI.INVOICE_TYPE_ID != 6 AND AI.INVOICE_TYPE_ID != 7 AND AI.INVOICE_TYPE_ID != 8
AND AC.COMPANY_ID = SA.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
UNION ALL

-- AP LINE Debit and CREDIT

SELECT 'AP INVOICE' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
AI.INVOICE_NUMBER as REFERENCE_NUMBER, AL.DESCRIPTION, AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_LINE AL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = AL.AP_INVOICE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = AL.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AL.AMOUNT >= 0
AND AI.INVOICE_TYPE_ID != 5 AND AI.INVOICE_TYPE_ID != 6 AND AI.INVOICE_TYPE_ID != 7 AND AI.INVOICE_TYPE_ID != 8
AND FW.CURRENT_STATUS_ID != 4
UNION ALL 

SELECT 'AP INVOICE' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE, 
AI.INVOICE_NUMBER as REFERENCE_NUMBER, AL.DESCRIPTION, 0 AS DEBIT, -AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_LINE AL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = AL.AP_INVOICE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = AL.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AL.AMOUNT < 0
AND AI.INVOICE_TYPE_ID != 5 AND AI.INVOICE_TYPE_ID != 6 AND AI.INVOICE_TYPE_ID != 7 AND AI.INVOICE_TYPE_ID != 8
AND FW.CURRENT_STATUS_ID != 4
UNION ALL
-- AP Payment
-- Credit

SELECT 'AP PAYMENT' as SOURCE, AI.AP_PAYMENT_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AP.CHECK_DATE as GL_DATE, 
AP.CHECK_NUMBER as REFERENCE_NUMBER, 
CONCAT (CASE API.INVOICE_TYPE_ID
WHEN 5 THEN CONCAT('RR-', API.SEQUENCE_NO)
WHEN 6 THEN CONCAT('RTS-', API.SEQUENCE_NO)
WHEN 8 THEN CONCAT('RR-RM ', API.SEQUENCE_NO)
ELSE API.INVOICE_NUMBER 
END) AS DESCSRIPTION,
0 AS DEBIT, AI.PAID_AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID=AP.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AP.AMOUNT != 0
AND AI.PAID_AMOUNT > 0
AND AP.COMPANY_ID = AC.COMPANY_ID
UNION ALL

SELECT 'AP PAYMENT' as SOURCE, AI.AP_PAYMENT_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AP.CHECK_DATE as GL_DATE, 
AP.CHECK_NUMBER as REFERENCE_NUMBER,
CONCAT (CASE API.INVOICE_TYPE_ID
WHEN 5 THEN CONCAT('RR-', API.SEQUENCE_NO)
WHEN 6 THEN CONCAT('RTS-', API.SEQUENCE_NO)
WHEN 8 THEN CONCAT('RR-RM ', API.SEQUENCE_NO)
ELSE API.INVOICE_NUMBER 
END) AS DESCSRIPTION, -AI.PAID_AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID=AP.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AP.AMOUNT != 0
AND AI.PAID_AMOUNT < 0
AND AP.COMPANY_ID = AC.COMPANY_ID
UNION ALL
-- Credit - AP INVOICE
SELECT 'AP PAYMENT' as SOURCE, AI.AP_PAYMENT_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AP.CHECK_DATE as GL_DATE, 
AP.CHECK_NUMBER as REFERENCE_NUMBER,
CONCAT (CASE API.INVOICE_TYPE_ID
WHEN 5 THEN CONCAT('RR-', API.SEQUENCE_NO)
WHEN 6 THEN CONCAT('RTS-', API.SEQUENCE_NO)
WHEN 8 THEN CONCAT('RR-RM ', API.SEQUENCE_NO)
ELSE API.INVOICE_NUMBER 
END) AS DESCSRIPTION, 0 AS DEBIT, -AI.PAID_AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AI.PAID_AMOUNT < 0
AND AP.COMPANY_ID = AC.COMPANY_ID
UNION ALL

-- Debit
SELECT 'AP PAYMENT' as SOURCE, AI.AP_PAYMENT_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AP.CHECK_DATE as GL_DATE, 
AP.CHECK_NUMBER as REFERENCE_NUMBER, 
CONCAT (CASE API.INVOICE_TYPE_ID
WHEN 5 THEN CONCAT('RR-', API.SEQUENCE_NO)
WHEN 6 THEN CONCAT('RTS-', API.SEQUENCE_NO)
WHEN 8 THEN CONCAT('RR-RM ', API.SEQUENCE_NO)
ELSE API.INVOICE_NUMBER 
END) AS DESCSRIPTION,
AI.PAID_AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AP_PAYMENT_INVOICE AI
INNER JOIN AP_PAYMENT AP ON AP.AP_PAYMENT_ID = AI.AP_PAYMENT_ID
INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = SA.DEFAULT_CREDIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AP_INVOICE API ON API.AP_INVOICE_ID = AI.AP_INVOICE_ID 
INNER JOIN FORM_WORKFLOW FW ON AP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AI.PAID_AMOUNT >= 0
AND AP.COMPANY_ID = AC.COMPANY_ID
UNION ALL
-- AR MISCELLANEOUS
-- Debit debit account combination
SELECT 'AR MISCELLANEOUS' as SOURCE, AM.AR_MISCELLANEOUS_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AM.MATURITY_DATE as GL_DATE, 
AM.RECEIPT_NUMBER AS REFERENCE_NUMBER, AM.DESCRIPTION, AM.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_MISCELLANEOUS AM
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AM.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.DEBIT_ACCOUNT_COMBINATION_ID IS NOT NULL
AND AC.COMPANY_ID = RM.COMPANY_ID 

-- Debit, bank account
UNION ALL 
SELECT 'AR MISCELLANEOUS' as SOURCE, AM.AR_MISCELLANEOUS_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AM.MATURITY_DATE as GL_DATE,
AM.RECEIPT_NUMBER AS REFERENCE_NUMBER, AM.DESCRIPTION, AM.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_MISCELLANEOUS AM
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AM.RECEIPT_METHOD_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.BANK_ACCOUNT_ID IS NOT NULL
AND AC.COMPANY_ID = RM.COMPANY_ID 

UNION ALL
-- Debit
SELECT 'AR MISCELLANEOUS' as SOURCE, AM.AR_MISCELLANEOUS_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AM.MATURITY_DATE as GL_DATE,
AM.RECEIPT_NUMBER AS REFERENCE_NUMBER, AM.DESCRIPTION, -AML.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_MISCELLANEOUS_LINE AML
INNER JOIN AR_MISCELLANEOUS AM ON AM.AR_MISCELLANEOUS_ID = AML.AR_MISCELLANEOUS_ID
-- INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AML.AR_LINE_SETUP_ID
INNER JOIN SERVICE_SETTING ALS ON ALS.SERVICE_SETTING_ID = AML.SERVICE_SETTING_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AML.AMOUNT < 0

UNION ALL
-- Credit
SELECT 'AR MISCELLANEOUS' as SOURCE, AM.AR_MISCELLANEOUS_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AM.MATURITY_DATE as GL_DATE, 
AM.RECEIPT_NUMBER AS REFERENCE_NUMBER, AM.DESCRIPTION, 0 AS DEBIT, AML.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_MISCELLANEOUS_LINE AML
INNER JOIN AR_MISCELLANEOUS AM ON AM.AR_MISCELLANEOUS_ID = AML.AR_MISCELLANEOUS_ID
-- INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AML.AR_LINE_SETUP_ID
INNER JOIN SERVICE_SETTING ALS ON ALS.SERVICE_SETTING_ID = AML.SERVICE_SETTING_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AM.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AML.AMOUNT >= 0
UNION ALL
-- AR Transaction
-- Debit
SELECT 'AR TRANSACTION' as SOURCE, AT.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AT.GL_DATE, 
AT.TRANSACTION_NUMBER as REFERENCE_NUMBER, AT.DESCRIPTION, AT.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_TRANSACTION AT
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AT.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AT.AMOUNT >= 0
AND AT.AR_TRANSACTION_TYPE_ID BETWEEN 1 AND 3
AND AT.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
UNION ALL
-- Credit
SELECT 'AR TRANSACTION' as SOURCE, AT.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AT.GL_DATE, 
AT.TRANSACTION_NUMBER as REFERENCE_NUMBER, AT.DESCRIPTION, 0 AS DEBIT, -AT.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_TRANSACTION AT
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AT.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AT.AMOUNT < 0
AND AT.AR_TRANSACTION_TYPE_ID BETWEEN 1 AND 3
AND AT.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
UNION ALL
-- AR LINE
-- Credit
SELECT 'AR TRANSACTION' as SOURCE, AT.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AT.GL_DATE, 
AT.TRANSACTION_NUMBER as REFERENCE_NUMBER, AT.DESCRIPTION, 0 AS DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID=AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AL.AMOUNT >= 0
AND AT.AR_TRANSACTION_TYPE_ID = 1 AND AT.AR_TRANSACTION_TYPE_ID = 2 AND AT.AR_TRANSACTION_TYPE_ID = 3
AND AT.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
UNION ALL
-- Debit
SELECT 'AR TRANSACTION' as SOURCE, AT.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AT.GL_DATE, 
AT.TRANSACTION_NUMBER as REFERENCE_NUMBER, AT.DESCRIPTION, -AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID=AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AT.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AL.AMOUNT < 0
AND AT.AR_TRANSACTION_TYPE_ID BETWEEN 1 AND 3
AND AT.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4

UNION ALL
-- AR Receipt - not cancelled and  Maturity Date
-- Debit
-- RECEIPT_ID
-- RECEIPT_METHOD
-- Either from DEBIT_ACCOUNT_COMBINATION_ID or BANK_ACCOUNT_ID
SELECT 'ACCOUNT COLLECTION' as SOURCE, CONCAT(AR.AR_RECEIPT_ID, RM.RECEIPT_METHOD_ID) as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE,
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, '' as DESCRIPTION, AR.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND RM.DEBIT_ACCOUNT_COMBINATION_ID IS NOT NULL
AND AR.AMOUNT != 0
AND AR.COMPANY_ID = AC.COMPANY_ID

-- Debit Bank account
UNION ALL
SELECT 'ACCOUNT COLLECTION' as SOURCE, CONCAT(AR.AR_RECEIPT_ID, BA.CASH_IN_BANK_ACCT_ID) as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE, 
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, '' AS DESCRIPTION, AR.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.AMOUNT != 0
AND AR.COMPANY_ID = AC.COMPANY_ID

UNION ALL
-- Credit
-- RECEIPT_ID
-- RECEIPT_METHOD
-- CREDIT_ACCOUNT_COMBINATION_ID
SELECT 'ACCOUNT COLLECTION' as SOURCE, AR.AR_RECEIPT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE, 
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, '' AS DESCRIPTION, 0 AS DEBIT, AR.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT AR
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.AMOUNT != 0
AND AR.COMPANY_ID = AC.COMPANY_ID

UNION ALL
-- AR Transaction
-- if amount is positive
-- Debit
-- AR_RECEIPT_TRANSACTION.AR_RECEIPT_ID->AR_RECEIPT.RECEIPT_ID->RECEIPT_METHOD.CREDIT_ACCOUNT_COMBINATION_ID
SELECT 'ACCOUNT COLLECTION' as SOURCE, ART.AR_RECEIPT_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE,
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, AT.TRANSACTION_NUMBER AS DESCRIPTION, ART.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT >= 0
AND AR.COMPANY_ID = AC.COMPANY_ID
AND AT.AR_TRANSACTION_TYPE_ID != 15

UNION ALL

SELECT 'ACCOUNT COLLECTION' as SOURCE, ART.AR_RECEIPT_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE,
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, AT.TRANSACTION_NUMBER AS DESCRIPTION, 0 AS DEBIT, -ART.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT < 0
AND AR.COMPANY_ID = AC.COMPANY_ID
AND AT.AR_TRANSACTION_TYPE_ID != 15

UNION ALL

-- Credit
-- AR_RECEIPT_TRANSACTION.AR_RECEIPT_ID->AR_RECEIPT.AR_CUSTOMER_ACCOUNT_ID->AR_CUSTOMER_ACCOUNT.DEFAULT_DEBIT_AC_ID
-- if negative, reverse the debit and credit.
SELECT 'ACCOUNT COLLECTION' as SOURCE, ART.AR_RECEIPT_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE,
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, AT.TRANSACTION_NUMBER AS DESCRIPTION, 0 AS DEBIT, ART.AMOUNT as CREDIT, 
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT >= 0
AND AR.COMPANY_ID = AC.COMPANY_ID
AND AT.AR_TRANSACTION_TYPE_ID != 15

UNION ALL

SELECT 'ACCOUNT COLLECTION' as SOURCE, ART.AR_RECEIPT_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE, 
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, AT.TRANSACTION_NUMBER AS DESCRIPTION, -ART.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AR_RECEIPT_TRANSACTION ART
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ART.AR_RECEIPT_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = AR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN AR_TRANSACTION AT ON AT.AR_TRANSACTION_ID = ART.AR_TRANSACTION_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND ART.AMOUNT < 0
AND AR.COMPANY_ID = AC.COMPANY_ID
AND AT.AR_TRANSACTION_TYPE_ID != 15

UNION ALL

-- AR Receipt AR Line -- Debit
SELECT 'ACCOUNT COLLECTION' as SOURCE, ACL.AC_AR_LINE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE, 
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, ALS.NAME AS DESCRIPTION, ACL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AC_AR_LINE ACL
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ACL.AR_RECEIPT_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = ACL.AR_LINE_SETUP_ID 
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = AR.RECEIPT_METHOD_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.COMPANY_ID = AC.COMPANY_ID

UNION ALL

-- AR Receipt AR Line -- Credit
SELECT 'ACCOUNT COLLECTION' as SOURCE, ACL.AC_AR_LINE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AR.MATURITY_DATE as GL_DATE, 
AR.RECEIPT_NUMBER as REFERENCE_NUMBER, ALS.NAME AS DESCRIPTION, 0 AS DEBIT, ACL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, 1 as IS_POSTED
FROM AC_AR_LINE ACL
INNER JOIN AR_RECEIPT AR ON AR.AR_RECEIPT_ID = ACL.AR_RECEIPT_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = ACL.AR_LINE_SETUP_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = AR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND AR.COMPANY_ID = AC.COMPANY_ID


UNION ALL

-- Cash Sales : Cost Account
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE, 
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales - Processing : Cost Account
SELECT 'CASH SALES - PROCESSING' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE, 
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 6

UNION ALL

-- Cash Sales - IS : Cost Account
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE, 
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Inventory Account
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
 	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
 	FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales - Inventory Account
SELECT 'CASH SALES - PROCESSING' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 6

UNION ALL

-- Cash Sales - IS : Inventory Account
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
 	0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
 	FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Sales Account
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 AS DEBIT, QUANTITY * SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Processing - Sales Account
SELECT 'CASH SALES - PROCESSING' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 AS DEBIT, QUANTITY * SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 6

UNION ALL

-- Cash Sales - IS : Sales Account
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 AS DEBIT, QUANTITY * SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Sales Discount Account
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = AC.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1 

UNION ALL

-- Cash Sales - IS : Sales Discount Account
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CS.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN DIVISION D ON D.DIVISION_ID = AC.DIVISION_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Receipt Method - Default Debit - Sale Items
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Sales - Receipt Method - Default Debit - Sale Items
SELECT 'CASH SALES - PROCESSING' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 6

UNION ALL

-- Cash Sales - IS :  Receipt Method - Default Debit - Sale Items
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Receipt Method - Default Debit - Ar Lines
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales - IS : Receipt Method - Default Debit - Ar Lines
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Receipt Method - Bank Account
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales - Receipt Method - Bank Account
SELECT 'CASH SALES - PROCESSING' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID = 6

UNION ALL

-- Cash Sales - IS : Receipt Method - Bank Account
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
CSI.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_ITEM CSI
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSI.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CS.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales - Other Charges
SELECT 'CASH SALES' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 AS DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales - IS : Other Charges
SELECT 'CASH SALES - IS' as SOURCE, CS.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CS.RECEIPT_DATE as GL_DATE,
CONCAT('CS-IS ', CS_NUMBER) as REFERENCE_NUMBER, CS.SALE_INVOICE_NO AS DESCRIPTION, 
0 AS DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_AR_LINE AL
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = AL.CASH_SALE_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CS.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CS.CASH_SALE_TYPE_ID=3

UNION ALL

-- Account Sales - Cost Account
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Account Sales - IS - Cost Account
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales : Inventory Account
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Inventory Account
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales : Sales Account
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, QUANTITY * SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Sales Account
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, QUANTITY * SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales : Sales Discount Account
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Sales Discount Account
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Customer Account Setup - Sale Items
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
ASI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Customer Account Setup - Sale Items
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
ASI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - Customer Account Setup - Ar Lines
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
AL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Customer Account Setup - Ar Lines
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
AL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales : Other charges
SELECT 'ACCOUNT SALES' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales - IS : Other charges
SELECT 'ACCOUNT SALES - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, 
CONCAT('AS-IS ', SEQUENCE_NO) as REFERENCE_NUMBER, ART.DESCRIPTION,
0 as DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Receiving Report - Debit
SELECT 'RECEIVING REPORT' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,
COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = RR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND AI.INVOICE_TYPE_ID = 5
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Receiving Report - Credit - Invoice Number
SELECT 'RECEIVING REPORT' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER, 
COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RR.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID AND AC.COMPANY_ID = RR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE UNIT_COST IS NOT NULL
AND AI.INVOICE_TYPE_ID = 5
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Receiving Report - Credit - Supplier Account
SELECT 'RECEIVING REPORT' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE as GL_DATE,
CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER, COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) AS DESCRIPTION, 
0 AS DEBIT, APL.AMOUNT AS CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE_LINE APL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID AND AC.COMPANY_ID = RR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND AI.INVOICE_TYPE_ID = 5

UNION ALL

-- Receiving Report - Debit - AP Line Setup
SELECT 'RECEIVING REPORT' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE as GL_DATE,
CONCAT('RR-', AI.SEQUENCE_NO) as REFERENCE_NUMBER, COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) AS DESCRIPTION, 
APL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE_LINE APL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN AP_LINE_SETUP ALS ON ALS.AP_LINE_SETUP_ID = APL.AP_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND AI.INVOICE_TYPE_ID = 5
AND ALS.ACTIVE = 1

UNION ALL

-- Receiving Report - Raw Materials - Debit - Item Category Account Setup
SELECT 'RECEIVING REPORT - RM' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RR-RM ', AI.SEQUENCE_NO) as REFERENCE_NUMBER,
COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
RRMI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM R_RECEIVING_REPORT_ITEM RRI
INNER JOIN R_RECEIVING_REPORT_RM_ITEM RRMI ON RRMI.R_RECEIVING_REPORT_ITEM_ID = RRI.R_RECEIVING_REPORT_ITEM_ID
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = RR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND AI.INVOICE_TYPE_ID = 8
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Receiving Report - RM - Debit - AP Line Setup
SELECT 'RECEIVING REPORT - RM' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE as GL_DATE,
CONCAT('RR-RM ', AI.SEQUENCE_NO) as REFERENCE_NUMBER, COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) AS DESCRIPTION, 
APL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE_LINE APL
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = APL.AP_INVOICE_ID
INNER JOIN AP_LINE_SETUP ALS ON ALS.AP_LINE_SETUP_ID = APL.AP_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND AI.INVOICE_TYPE_ID = 8
AND ALS.ACTIVE = 1

UNION ALL

-- Receiving Report - Raw Materials - Credit - Supplier Account - Default Credit
SELECT 'RECEIVING REPORT - RM' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RR-RM ', AI.SEQUENCE_NO) as REFERENCE_NUMBER, 
COALESCE(AI.INVOICE_NUMBER, RR.DELIVERY_RECEIPT_NO) as DESCRIPTION,
0 as DEBIT, AI.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AP_INVOICE AI
INNER JOIN R_RECEIVING_REPORT RR ON RR.AP_INVOICE_ID = AI.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID AND AC.COMPANY_ID = RR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE AI.INVOICE_TYPE_ID = 8
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Return To Supplier - Credit
SELECT 'RETURN TO SUPPLIER' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RTS-', AI.SEQUENCE_NO) as REFERENCE_NUMBER,  CONCAT('RR-', RRAI.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(RTSI.UNIT_COST, 0) * RTSI.QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON RTS.AP_INVOICE_ID = RTSI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT_ITEM RRI ON RRI.R_RECEIVING_REPORT_ITEM_ID = RTSI.R_RECEIVING_REPORT_ITEM_ID
INNER JOIN AP_INVOICE RRAI ON RRAI.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN ITEM I ON I.ITEM_ID = RTSI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = RTS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND RTSI.UNIT_COST IS NOT NULL
AND AI.INVOICE_TYPE_ID = 6
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Return To Supplier - Debit
SELECT 'RETURN TO SUPPLIER' as SOURCE, AI.AP_INVOICE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, AI.GL_DATE,
CONCAT('RTS-', AI.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('RR-', RRAI.SEQUENCE_NO) as DESCRIPTION,
COALESCE(RTSI.UNIT_COST, 0) * RTSI.QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM R_RETURN_TO_SUPPLIER_ITEM RTSI
INNER JOIN R_RETURN_TO_SUPPLIER RTS ON RTS.AP_INVOICE_ID = RTSI.AP_INVOICE_ID
INNER JOIN AP_INVOICE AI ON AI.AP_INVOICE_ID = RTS.AP_INVOICE_ID
INNER JOIN R_RECEIVING_REPORT_ITEM RRI ON RRI.R_RECEIVING_REPORT_ITEM_ID = RTSI.R_RECEIVING_REPORT_ITEM_ID
INNER JOIN AP_INVOICE RRAI ON RRAI.AP_INVOICE_ID = RRI.AP_INVOICE_ID
INNER JOIN SUPPLIER_ACCOUNT SPA ON SPA.SUPPLIER_ACCOUNT_ID = AI.SUPPLIER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = SPA.DEFAULT_CREDIT_AC_ID AND AC.COMPANY_ID = RTS.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON AI.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE RTSI.UNIT_COST IS NOT NULL
AND AI.INVOICE_TYPE_ID = 6
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Cash Sales Return - Cost Account - Return Items
SELECT 'CASH SALES RETURN' as SOURCE,  CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return (Return of Returns) - Cost Account - Return Items
SELECT 'CASH SALES RETURN' as SOURCE,  CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return - IS - Cost Account - Return Items
SELECT 'CASH SALES RETURN - IS' as SOURCE,  CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS ', CS_NUMBER) AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales Return - IS (Return of returns) - Cost Account - Return Items
SELECT 'CASH SALES RETURN - IS' as SOURCE,  CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-IS ', CS.CSR_NUMBER) AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales Return - Inventory Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return (Return of returns) - Inventory Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return - IS : Inventory Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS ', CS_NUMBER) AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales Return - IS (Return of returns) : Inventory Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS ', CS.CSR_NUMBER) AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=3

UNION ALL

-- Cash Sales Return - Sales Return Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return (Return of returns) - Sales Return Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return - IS : Sales Return Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS ', CS_NUMBER) AS DESCRIPTION, 
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return - IS (Return of returns) : Sales Return Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-IS ', CS.CSR_NUMBER) AS DESCRIPTION, 
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Return Sales - Sales Discount Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Return Sales (Return of returns) - Sales Discount Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Return Sales - IS : Sales Discount Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS ', CS_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Return Sales - IS (Return of returns) : Sales Discount Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-IS ', CS.CSR_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = CSR.AR_CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = CSRI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return - Receipt Method - Default Debit
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Sales Return (Return of returns) - Receipt Method - Default Debit
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Sales Return - IS : Receipt Method - Default Debit
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS', CS_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return - IS (Return to returns) : Receipt Method - Default Debit
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-IS', CS.CSR_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return - Receipt Method - Bank Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Sales Return (Return of returns) - Receipt Method - Bank Account
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR ', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 1

UNION ALL

-- Cash Sales Return IS - Receipt Method - Bank Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-IS', CS_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return IS (Return of returns) - Receipt Method - Bank Account
SELECT 'CASH SALES RETURN - IS' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-IS', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-IS', CS.CSR_NUMBER) AS DESCRIPTION, 
CSRI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_ITEM CSRI
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = CSRI.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID = 3

UNION ALL

-- Cash Sales Return - Other Charges
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-', CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_AR_LINE AL
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = AL.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales Return (Return of returns) - Other Charges
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
0 AS DEBIT, AL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_AR_LINE AL
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = AL.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales RETURN - Receipt Method - Default Debit - Ar Lines
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CS-', CS_NUMBER) AS DESCRIPTION, 
AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_AR_LINE AL
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = AL.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE CS ON CS.CASH_SALE_ID = CSR.CASH_SALE_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL

-- Cash Sales RETURN (Return of returns) - Receipt Method - Default Debit - Ar Lines
SELECT 'CASH SALES RETURN' as SOURCE, CSR.CASH_SALE_RETURN_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CSR.DATE as GL_DATE,
CONCAT('CSR-', CSR.CSR_NUMBER) as REFERENCE_NUMBER, CONCAT('CSR-', CS.CSR_NUMBER) AS DESCRIPTION, 
AL.AMOUNT AS DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CASH_SALE_RETURN_AR_LINE AL
INNER JOIN CASH_SALE_RETURN CSR ON CSR.CASH_SALE_RETURN_ID = AL.CASH_SALE_RETURN_ID
INNER JOIN CASH_SALE_RETURN CS ON CS.CASH_SALE_RETURN_ID = CSR.REF_CASH_SALE_RETURN_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CSR.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CASH_SALES_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CSR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CSR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE FW.CURRENT_STATUS_ID != 4
AND CSR.CASH_SALE_TYPE_ID=1

UNION ALL
-- Account Sales Return - Cost Account
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 5
AND ASR.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - IS- Cost Account
SELECT 'ACCOUNT SALES RETURN - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-IS ', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-IS ', ASR.SEQUENCE_NO) as DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 11
AND ASR.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - Inventory Account
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 5 
AND ASR.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - IS - Inventory Account
SELECT 'ACCOUNT SALES RETURN - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-IS ', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-IS ', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND UNIT_COST IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 11
AND ASR.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - Sale Return Account
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 5 
AND ASR.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - IS - Sale Return Account
SELECT 'ACCOUNT SALES RETURN - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-IS ', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-IS ', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, (QUANTITY * SRP) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_RETURN_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND ART.AR_TRANSACTION_TYPE_ID = 11
AND ASR.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - Sales Discount Account
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 5 
AND ASR.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return -IS - Sales Discount Account
SELECT 'ACCOUNT SALES RETURN - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-IS ', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-IS ', ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, COALESCE(-DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ITEM I ON I.ITEM_ID = ASI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND DISCOUNT IS NOT NULL
AND ART.AR_TRANSACTION_TYPE_ID = 11
AND ASR.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return - Customer Account Setup
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-', ASR.SEQUENCE_NO) as DESCRIPTION,
ASI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 5 
AND ASR.AR_TRANSACTION_TYPE_ID = 4
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return -IS - Customer Account Setup
SELECT 'ACCOUNT SALES RETURN - IS' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE,
CONCAT('ASR-IS ', ART.SEQUENCE_NO) as REFERENCE_NUMBER, CONCAT('AS-IS ', ASR.SEQUENCE_NO) as DESCRIPTION,
ASI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM ACCOUNT_SALE_ITEM ASI
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = ASI.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 11
AND ASR.AR_TRANSACTION_TYPE_ID = 10
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return: Customer Account Setup - Ar Lines
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, 
A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, CONCAT('ASR ', ART.SEQUENCE_NO) as REFERENCE_NUMBER,
CONCAT((CASE WHEN ASR.AR_TRANSACTION_TYPE_ID = 4 THEN 'AS-' ELSE 'ASR-' END), ASR.SEQUENCE_NO) as DESCRIPTION,
AL.AMOUNT as DEBIT, 0 as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_CUSTOMER_ACCOUNT ACA ON ACA.AR_CUSTOMER_ACCOUNT_ID = ART.CUSTOMER_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ACA.DEFAULT_DEBIT_AC_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 5
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Account Sales Return : Other charges
SELECT 'ACCOUNT SALES RETURN' as SOURCE, ART.AR_TRANSACTION_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID,
A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, ART.TRANSACTION_DATE AS GL_DATE, CONCAT('ASR ', ART.SEQUENCE_NO) as REFERENCE_NUMBER,
CONCAT((CASE WHEN ASR.AR_TRANSACTION_TYPE_ID = 4 THEN 'AS-' ELSE 'ASR-' END), ASR.SEQUENCE_NO) as DESCRIPTION,
0 as DEBIT, AL.AMOUNT as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM AR_LINE AL
INNER JOIN AR_TRANSACTION ART ON ART.AR_TRANSACTION_ID = AL.AR_TRANSACTION_ID
INNER JOIN AR_TRANSACTION ASR ON ASR.AR_TRANSACTION_ID = ART.ACCOUNT_SALE_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = AL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = ART.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON ART.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ART.AR_TRANSACTION_TYPE_ID = 5
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Customer Advance Payment - Receipt Method Debit - Default Debit
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAPI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Customer Advance Payment - Receipt Method Debit - Default Debit - Other Charges
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - Receipt Method Debit - Bank Account
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAPI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - Receipt Method Debit - Bank Account - Other Charges
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - Receipt Method Credit
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
0 as DEBIT, CAPI.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - Receipt Method Credit - Other Crarges
SELECT 'CUSTOMER ADVANCE PAYMENT' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
0 as DEBIT, CAL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Customer Advance Payment - IS: Receipt Method Debit - Default Debit
SELECT 'CUSTOMER ADVANCE PAYMENT - IS ' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS ', CAP_NUMBER) as REFERENCE_NUMBER, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAPI.AMOUNT as DEBIT, 0 as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Customer Advance Payment - IS: Receipt Method Debit - Default Debit - Other Charges
SELECT 'CUSTOMER ADVANCE PAYMENT - IS' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS ', CAP_NUMBER) as REFERENCE_NUMBER, CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAL.AMOUNT as DEBIT, 0 as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.DEBIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - IS: Receipt Method Debit - Bank Account
SELECT 'CUSTOMER ADVANCE PAYMENT - IS' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS ', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAPI.AMOUNT as DEBIT, 0 as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - IS: Receipt Method Debit - Bank Account - Other Charges
SELECT 'CUSTOMER ADVANCE PAYMENT - IS' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS ', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION, 
CAL.AMOUNT as DEBIT, 0 as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN BANK_ACCOUNT BA ON BA.BANK_ACCOUNT_ID = RM.BANK_ACCOUNT_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = BA.CASH_IN_BANK_ACCT_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - IS: Receipt Method Credit
SELECT 'CUSTOMER ADVANCE PAYMENT - IS' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS ', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAPI.AMOUNT as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CUSTOMER_ADVANCE_PAYMENT_ITEM CAPI
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAPI.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Customer Advance Payment - IS: Receipt Method Credit - Other Charges
SELECT 'CUSTOMER ADVANCE PAYMENT - IS' as SOURCE, CAP.CUSTOMER_ADVANCE_PAYMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID,
AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, CAP.RECEIPT_DATE as GL_DATE,
CONCAT('CAP-IS', CAP_NUMBER) as REFERENCE_NUMBER,  CAP.SALE_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAL.AMOUNT as CREDIT, FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_AR_LINE CAL
INNER JOIN CUSTOMER_ADVANCE_PAYMENT CAP ON CAP.CUSTOMER_ADVANCE_PAYMENT_ID = CAL.CUSTOMER_ADVANCE_PAYMENT_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAP.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAP.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAP.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAP.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment In - Receipt Method Debit
SELECT 'STOCK ADJUSTMENT IN' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE,
CONCAT('SA-', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND QUANTITY > 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment In - IS - Receipt Method Debit
SELECT 'STOCK ADJUSTMENT IN - IS' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE,
CONCAT('SA-IS ', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND QUANTITY > 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment In - Receipt Method Credit
SELECT 'STOCK ADJUSTMENT IN' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE,
CONCAT('SA-', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE QUANTITY > 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 


-- Stock Adjustment In - IS - Receipt Method Credit
SELECT 'STOCK ADJUSTMENT IN - IS' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE,
CONCAT('SA-IS ', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE QUANTITY > 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL 

-- Stock Adjustment Out - Receipt Method Debit
SELECT 'STOCK ADJUSTMENT OUT' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE, 
CONCAT('SA-', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
COALESCE(UNIT_COST, 0) * -QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE QUANTITY < 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment Out - Receipt Method Debit
SELECT 'STOCK ADJUSTMENT OUT - IS' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE, 
CONCAT('SA-IS ', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
COALESCE(UNIT_COST, 0) * -QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = SAT.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE QUANTITY < 0
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment Out - Receipt Method Credit
SELECT 'STOCK ADJUSTMENT OUT' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE, 
CONCAT('SA-', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * -QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND QUANTITY < 0 
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Stock Adjustment Out - IS - Receipt Method Credit
SELECT 'STOCK ADJUSTMENT OUT - IS' as SOURCE, SA.STOCK_ADJUSTMENT_ID as ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, SA.SA_DATE as GL_DATE, 
CONCAT('SA-IS ', SA.SA_NUMBER) as REFERENCE_NUMBER, SA.REMARKS AS DESCRIPTION,
0 as DEBIT, COALESCE(UNIT_COST, 0) * -QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM STOCK_ADJUSTMENT_ITEM SAI
INNER JOIN STOCK_ADJUSTMENT SA ON SA.STOCK_ADJUSTMENT_ID = SAI.STOCK_ADJUSTMENT_ID
INNER JOIN STOCK_ADJUSTMENT_TYPE SAT ON SAT.STOCK_ADJUSTMENT_TYPE_ID = SA.STOCK_ADJUSTMENT_TYPE_ID
INNER JOIN ITEM I ON I.ITEM_ID = SAI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = SA.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON SA.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND QUANTITY < 0 
AND UNIT_COST IS NOT NULL AND SAI.EB_OBJECT_ID IS NOT NULL
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Paid in Advance Delivery - DEBIT - Cost Account
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL
-- Paid in Advance Delivery - CREDIT - Inventory Account
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery - CREDIT - Sales Account
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAPDI.QUANTITY * CAPDI.SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery - CREDIT - Sales Discount Account
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND (DISCOUNT IS NOT NULL || DISCOUNT != 0)
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery - DEBIT - Receipt Method - CAP
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CAPDI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery - DEBIT - Receipt Method - CAP - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CPAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CPAL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = CPAL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAPD.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 1

UNION ALL

-- Paid in Advance Delivery IS - DEBIT - Cost Account
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL
-- Paid in Advance Delivery IS - CREDIT - Inventory Account
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Paid in Advance Delivery IS - CREDIT - Sales Account
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAPDI.QUANTITY * CAPDI.SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Paid in Advance Delivery IS - CREDIT - Sales Discount Account
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND (DISCOUNT IS NOT NULL || DISCOUNT != 0)
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Paid in Advance Delivery IS - DEBIT - Receipt Method - CAP
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CAPDI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Paid in Advance Delivery IS - DEBIT - Receipt Method - CAP - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CPAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Paid in Advance Delivery IS - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - IS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-IS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CPAL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = CPAL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON 
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAPD.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 3

UNION ALL

-- Processing Report - Raw Materials
SELECT (CASE WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WORK IN PROCESS - BAKING'
WHEN PR.PROCESSING_REPORT_TYPE_ID = 6 THEN 'WORK IN PROCESS - MIXING' 
ELSE 'PROCESSING REPORT' END) as SOURCE, CONCAT(RMI.PR_RAW_MATERIALS_ITEM_ID, RMI.ITEM_ID) as ID, 
AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, PR.DATE as GL_DATE,
CONCAT((CASE WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WIP-B '
WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WIP-M ' ELSE 'PR ' END), SEQUENCE_NO) as REFERENCE_NUMBER, PR.REF_NUMBER AS DESCRIPTION, 
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM PR_RAW_MATERIALS_ITEM RMI
INNER JOIN PROCESSING_REPORT PR ON PR.PROCESSING_REPORT_ID = RMI.PROCESSING_REPORT_ID
INNER JOIN ITEM I ON I.ITEM_ID = RMI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = PR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON PR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Processing Report - Other Materials
SELECT 'PROCESSING REPORT' as SOURCE, CONCAT(OMI.PR_OTHER_MATERIALS_ITEM_ID, OMI.ITEM_ID) as ID, 
AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, PR.DATE as GL_DATE,
CONCAT('PR ', SEQUENCE_NO) as REFERENCE_NUMBER, PR.REF_NUMBER AS DESCRIPTION, 
0 as DEBIT, COALESCE(UNIT_COST, 0) * QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM PR_OTHER_MATERIALS_ITEM OMI
INNER JOIN PROCESSING_REPORT PR ON PR.PROCESSING_REPORT_ID = OMI.PROCESSING_REPORT_ID
INNER JOIN ITEM I ON I.ITEM_ID = OMI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = PR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON PR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Processing Report - Main Product
SELECT (CASE WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WORK IN PROCESS - BAKING'
WHEN PR.PROCESSING_REPORT_TYPE_ID = 6 THEN 'WORK IN PROCESS - MIXING' 
ELSE 'PROCESSING REPORT' END) as SOURCE, CONCAT(MP.PR_MAIN_PRODUCT_ID, MP.ITEM_ID) as ID, 
AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, PR.DATE as GL_DATE,
CONCAT((CASE WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WIP-B '
WHEN PR.PROCESSING_REPORT_TYPE_ID = 5 THEN 'WIP-M ' ELSE 'PR ' END), SEQUENCE_NO) as REFERENCE_NUMBER, PR.REF_NUMBER AS DESCRIPTION, 
COALESCE(UNIT_COST, 0) * QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM PR_MAIN_PRODUCT MP
INNER JOIN PROCESSING_REPORT PR ON PR.PROCESSING_REPORT_ID = MP.PROCESSING_REPORT_ID
INNER JOIN ITEM I ON I.ITEM_ID = MP.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = PR.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON PR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Processing Report - Other Charge
SELECT 'PROCESSING REPORT' as SOURCE, CONCAT(OC.PR_OTHER_CHARGE_ID, OC.AR_LINE_SETUP_ID) as ID, 
AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME, PR.DATE as GL_DATE, 
CONCAT('PR ', SEQUENCE_NO) as REFERENCE_NUMBER, PR.REF_NUMBER AS DESCRIPTION,  0 AS DEBIT, OC.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM PR_OTHER_CHARGE OC
INNER JOIN PROCESSING_REPORT PR ON PR.PROCESSING_REPORT_ID = OC.PROCESSING_REPORT_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = OC.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON PR.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
AND PR.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4

UNION ALL

-- Paid in Advance Delivery - AS  - DEBIT - Cost Account
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS  - CREDIT - Inventory Account
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS  - CREDIT - Sales Account
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAPDI.QUANTITY * CAPDI.SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS - CREDIT - Sales Discount Account
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND (DISCOUNT IS NOT NULL || DISCOUNT != 0)
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS - DEBIT - Receipt Method - CAP
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CAPDI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS - DEBIT - Receipt Method - CAP - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CPAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - AS - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - AS' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-AS ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CPAL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = CPAL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAPD.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 4

UNION ALL

-- Paid in Advance Delivery - WIPSO  - DEBIT - Cost Account
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID 
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.COST_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL
-- Paid in Advance Delivery - WIPSO  - CREDIT - Inventory Account
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, COALESCE(CAPDI.UNIT_COST, 0) * CAPDI.QUANTITY as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.INVENTORY_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL

-- Paid in Advance Delivery - WIPSO  - CREDIT - Sales Account
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CAPDI.QUANTITY * CAPDI.SRP as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL

-- Paid in Advance Delivery - AS - CREDIT - Sales Discount Account
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, -COALESCE(DISCOUNT, 0) as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN ITEM_CATEGORY_ACCOUNT_SETUP ICAS ON I.ITEM_CATEGORY_ID = ICAS.ITEM_CATEGORY_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ICAS.SALES_DISCOUNT_ACCOUNT AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE ICAS.ACTIVE = 1
AND ICAS.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND (DISCOUNT IS NOT NULL || DISCOUNT != 0)
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL

-- Paid in Advance Delivery - WIPSO - DEBIT - Receipt Method - CAP
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CAPDI.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_ITEM CAPDI
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CAPDI.CAP_DELIVERY_ID
INNER JOIN ITEM I ON I.ITEM_ID = CAPDI.ITEM_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL

-- Paid in Advance Delivery - WIPSO - DEBIT - Receipt Method - CAP - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
CPAL.AMOUNT as DEBIT, 0 as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN INVENTORY_ACCOUNT IA ON IA.COMPANY_ID = CAPD.COMPANY_ID
INNER JOIN RECEIPT_METHOD RM ON RM.RECEIPT_METHOD_ID = IA.CUSTOMER_ADV_PAYMENT_RM_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = RM.CREDIT_ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE IA.ACTIVE = 1
AND IA.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5

UNION ALL

-- Paid in Advance Delivery - WIPSO - Other Charges
SELECT 'PAID IN ADVANCE DELIVERY - WIPSO' AS SOURCE, CAPD.CAP_DELIVERY_ID AS ID, AC.COMPANY_ID, AC.DIVISION_ID, AC.ACCOUNT_ID, A.NUMBER as ACCT_NO, A.ACCOUNT_NAME,
CAPD.DELIVERY_DATE AS GL_DATE, CONCAT('PIAD-WIPSO ', CAPD.CAPD_NUMBER) as REFERENCE_NUMBER, CAPD.SALES_INVOICE_NO AS DESCRIPTION,
0 as DEBIT, CPAL.AMOUNT as CREDIT,
FW.FORM_WORKFLOW_ID, FW.CURRENT_STATUS_ID, FW.IS_COMPLETE, FW.IS_COMPLETE as IS_POSTED
FROM CAP_DELIVERY_AR_LINE CPAL
INNER JOIN CAP_DELIVERY CAPD ON CAPD.CAP_DELIVERY_ID = CPAL.CAP_DELIVERY_ID
INNER JOIN AR_LINE_SETUP ALS ON ALS.AR_LINE_SETUP_ID = CPAL.AR_LINE_SETUP_ID
INNER JOIN ACCOUNT_COMBINATION AC ON
(AC.ACCOUNT_COMBINATION_ID = ALS.ACCOUNT_COMBINATION_ID AND AC.COMPANY_ID = CAPD.COMPANY_ID)
INNER JOIN ACCOUNT A ON A.ACCOUNT_ID = AC.ACCOUNT_ID
INNER JOIN FORM_WORKFLOW FW ON CAPD.FORM_WORKFLOW_ID = FW.FORM_WORKFLOW_ID
WHERE CAPD.COMPANY_ID = AC.COMPANY_ID
AND FW.CURRENT_STATUS_ID != 4
AND CAPD.CUSTOMER_ADVANCE_PAYMENT_TYPE_ID = 5
//