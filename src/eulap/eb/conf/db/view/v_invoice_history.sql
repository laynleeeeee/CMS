-- Description View for invocie history


DROP VIEW IF EXISTS V_INVOICE_HISTORY;

CREATE VIEW V_INVOICE_HISTORY AS

SELECT
  COM.COMPANY_ID, COM.NAME AS COMPANY_NAME, (
  CASE WHEN AP.INVOICE_TYPE_ID = 1 THEN "REG"
    WHEN AP.INVOICE_TYPE_ID = 2 THEN "PRE"
    WHEN AP.INVOICE_TYPE_ID = 3 THEN "DM"
    WHEN AP.INVOICE_TYPE_ID = 4 THEN "CM"
    WHEN AP.INVOICE_TYPE_ID = 5 THEN "RR"
    WHEN AP.INVOICE_TYPE_ID = 8 THEN "RR-RM"
    WHEN AP.INVOICE_TYPE_ID = 19 THEN "CENTRAL"
    WHEN AP.INVOICE_TYPE_ID = 20 THEN "NSB 3"
    WHEN AP.INVOICE_TYPE_ID = 21 THEN "NSB 4"
    WHEN AP.INVOICE_TYPE_ID = 22 THEN "NSB 5"
    WHEN AP.INVOICE_TYPE_ID = 23 THEN "NSB 8"
    WHEN AP.INVOICE_TYPE_ID = 24 THEN "NSB 8A" END) AS TYPE,
  S.NAME AS SUPPLIER_NAME, SA.NAME AS SUPPLIER_ACCOUNT,
  (CASE WHEN AP.INVOICE_TYPE_ID = 5 THEN
    (CASE WHEN AP.DESCRIPTION IS NULL OR AP.DESCRIPTION="" THEN AP.INVOICE_NUMBER
    ELSE CONCAT(AP.INVOICE_NUMBER, ", ", AP.DESCRIPTION) END) ELSE AP.INVOICE_NUMBER END) AS INVOICE_NUMBER,
  AP.INVOICE_NUMBER AS INVOICE_NUM, AP.SEQUENCE_NO, AP.AMOUNT, AP.TERM_ID, TRM.NAME AS TERM,
  AP.AP_INVOICE_ID, AP.INVOICE_TYPE_ID, SA.SUPPLIER_ACCOUNT_ID,
  COALESCE((SELECT SUM(APAY.PAID_AMOUNT) FROM AP_PAYMENT PAY
    INNER JOIN AP_PAYMENT_INVOICE APAY ON APAY.AP_PAYMENT_ID = PAY.AP_PAYMENT_ID
    INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID=PAY.FORM_WORKFLOW_ID
    WHERE APAY.AP_INVOICE_ID = AP.AP_INVOICE_ID AND FW.CURRENT_STATUS_ID != 4
    AND PAY.CHECK_DATE < NOW()), 0) AS TOTAL_PAYMENT,
  S.SUPPLIER_ID, FW.CURRENT_STATUS_ID, FS.DESCRIPTION AS STATUS,
  AP.INVOICE_DATE, AP.GL_DATE, (CASE WHEN AP.DUE_DATE IS NULL
  THEN AP.INVOICE_DATE ELSE AP.DUE_DATE END) AS DUE_DATE
  FROM AP_INVOICE AP
  INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = AP.SUPPLIER_ID
  INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
  INNER JOIN COMPANY COM ON COM.COMPANY_ID = SA.COMPANY_ID
  INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID=AP.FORM_WORKFLOW_ID
  INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID=FW.CURRENT_STATUS_ID
  INNER JOIN TERM TRM ON TRM.TERM_ID = AP.TERM_ID
  WHERE AP.INVOICE_TYPE_ID != 6

UNION ALL

SELECT
  COM.COMPANY_ID, COM.NAME AS COMPANY_NAME, "RTS" AS TYPE,
  S.NAME AS SUPPLIER_NAME, SA.NAME AS SUPPLIER_ACCOUNT,
  (CASE WHEN AP.INVOICE_TYPE_ID = 6 THEN
    (CASE WHEN AP.DESCRIPTION IS NULL OR AP.DESCRIPTION="" THEN AP.INVOICE_NUMBER
    ELSE CONCAT(AP.INVOICE_NUMBER, ", ", AP.DESCRIPTION) END)
  WHEN AP.INVOICE_TYPE_ID = 7 THEN
    (CASE WHEN AP.DESCRIPTION IS NULL OR AP.DESCRIPTION="" THEN AP.INVOICE_NUMBER
    ELSE CONCAT(AP.INVOICE_NUMBER, ", ", AP.DESCRIPTION) END) ELSE AP.INVOICE_NUMBER END) AS INVOICE_NUMBER,
  AP.INVOICE_NUMBER AS INVOICE_NUM, AP.SEQUENCE_NO, -AP.AMOUNT, SA.TERM_ID, TRM.NAME AS TERM,
  AP.AP_INVOICE_ID, AP.INVOICE_TYPE_ID, SA.SUPPLIER_ACCOUNT_ID,
  COALESCE((SELECT SUM(APAY.PAID_AMOUNT) FROM AP_PAYMENT PAY
    INNER JOIN AP_PAYMENT_INVOICE APAY ON APAY.AP_PAYMENT_ID = PAY.AP_PAYMENT_ID
    INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID=PAY.FORM_WORKFLOW_ID
    WHERE APAY.AP_INVOICE_ID = AP.AP_INVOICE_ID AND FW.CURRENT_STATUS_ID != 4
    AND PAY.CHECK_DATE < NOW()), 0) AS TOTAL_PAYMENT,
  S.SUPPLIER_ID, FW.CURRENT_STATUS_ID, FS.DESCRIPTION AS STATUS,
  AP.INVOICE_DATE, AP.GL_DATE, (CASE WHEN AP.DUE_DATE IS NULL
  THEN AP.INVOICE_DATE ELSE AP.DUE_DATE END) AS DUE_DATE
  FROM AP_INVOICE AP
  INNER JOIN SUPPLIER S ON S.SUPPLIER_ID = AP.SUPPLIER_ID
  INNER JOIN SUPPLIER_ACCOUNT SA ON SA.SUPPLIER_ACCOUNT_ID = AP.SUPPLIER_ACCOUNT_ID
  INNER JOIN COMPANY COM ON COM.COMPANY_ID = SA.COMPANY_ID
  INNER JOIN FORM_WORKFLOW FW ON FW.FORM_WORKFLOW_ID=AP.FORM_WORKFLOW_ID
  INNER JOIN FORM_STATUS FS ON FS.FORM_STATUS_ID=FW.CURRENT_STATUS_ID
  INNER JOIN TERM TRM ON TRM.TERM_ID = SA.TERM_ID
  WHERE AP.INVOICE_TYPE_ID = 6;